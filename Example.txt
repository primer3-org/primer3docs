AN EXAMPLE
----------
One might be interested in performing PCR on an STS with a CA
repeat in the middle of it. Primers need to be chosen based on
the criteria of the experiment.

We need to come up with a boulder-io record to send to primer3 via
stdin. There are lots of ways to accomplish this. We could save
the record into a text file called 'input', and then type the
UNIX command 'primer3 < input'. 

Let's look at the input record itself:

SEQUENCE_ID=example
SEQUENCE=GTAGTCAGTAGACNATGACNACTGACGATGCAGACNACACACACACACACAGCACACAGGTATTAGTGGGCCATTCGATCCCGACCCAAATCGATAGCTACGATGACG
TARGET=37,21
PRIMER_OPT_SIZE=18
PRIMER_MIN_SIZE=15
PRIMER_MAX_SIZE=21
PRIMER_NUM_NS_ACCEPTED=1
PRIMER_PRODUCT_SIZE_RANGE=75-100
PRIMER_FILE_FLAG=1
PRIMER_PICK_INTERNAL_OLIGO=1
PRIMER_INTERNAL_OLIGO_EXCLUDED_REGION=37,21
PRIMER_EXPLAIN_FLAG=1
=

A breakdown of the reasoning behind each of the TAG=VALUE pairs
is below:

SEQUENCE_ID=example

The main intent of this tag is to provide an identifier for the
sequence that is meaningful to the user, for example when primer3
processes multiple records, and by default this tag is optional.
However, this tag is _required_ when PRIMER_FILE_FLAG is non-0
Because it provides the names of the files that contain lists
of oligos that primer3 considered.

SEQUENCE=GTAGTCAGTAGACNATGACNACTGACGATGCAGACNACACACACACACACAGCACACAGGTATTAGTGGGCCATTCGATCCCGACCCAAATCGATAGCTACGATGACG

The SEQUENCE tag is of ultimate importance. Without it, primer3
has no idea what to do. This sequence is 92 bases long. Note that
there is no newline until the sequence terminates completely.

TARGET=37,21

There is a simple sequence repeat in our sequence, which starts
at base 37, and has a length of 21 bases. We want primer3 to
choose primers which flank the repeat site, so we let primer3 know
that we consider this site to be important.

PRIMER_OPT_SIZE=18

Since our sequence length is rather small (only 92 bases
long), we lower the PRIMER_OPT_SIZE from 20 to 18. It's
more likely that primer3 will succeed if it shoots for smaller
primers with such a small sequence.

PRIMER_MIN_SIZE=15
PRIMER_MAX_SIZE=21

With the lowering of optimal primer size, it's good to lower
the minimum and maximum sizes as well.

PRIMER_NUM_NS_ACCEPTED=1

Again, since we've got such a small sequence with a
non-negligible amount of unknown bases (N's) in it, let's make
primer3's job easier by allowing it to pick primers that have
at most 1 unknown base.

PRIMER_PRODUCT_SIZE_RANGE=75-100

We reduce the product size range from the default of 100-300
because our source sequence is only 108 base pairs long.  If we
insisted on a product size of 100 base pairs primer3 would have
few possibilities to choose from.

PRIMER_FILE_FLAG=1

Since we've got such a small sequence, Primer might fail to
pick primers. We want to get the list of primers it
considered, then, so that we might manually pick primers
ourselves if Primer fails to do so. Setting this flag to 1
will force Primer to output the primers it considered to a
forward_primer and a reverse_primer output file.

PRIMER_PICK_INTERNAL_OLIGO=1

We want to see if Primer v2.3 can pick an internal oligo for
the sequence, so we set this flag to 1 (true).

PRIMER_INTERNAL_OLIGO_EXCLUDED_REGION=37,21

Normally CA-repeats make poor hybridization probes (because they
not specific enough).  Therefor we exclude the CA repeat (which
is the TARGET) from consideration for the middle oligo.

PRIMER_EXPLAIN_FLAG=1

We want to see statistics about the oligos and oligo triples
(left primer, internal oligo, right primer) that primer3
examined.

=

The '=' character terminates the record.

Tere are some boulderio tags that we never even
specified. (INCLUDED_REGION, EXCLUDED_REGION, et al.), which is
perfectly legal.  For the tags with default values, those
defaults will be used in the analysis. For the tags with NO
default values (like TARGET, for instance), the functionality
requested by the those tags will simply be absent. It's not the
case that we need to surround a simple sequence repeat every time
we want to pick primers!

OUTPUT TAGS
-----------
For each boulderio record passed into primer3 via stdin, exactly
one boulderio record comes out of primer3 on stdout. These output
records contain everything that the input record contains, plus a
subset of the following tag/value pairs.  Unless noted by (*),
each tag appears for each primer pair returned.  The first
version is PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO,PAIR}_<tag_name>.
Tags of additional primers chosen are of the form
PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO,PAIR}_<j>_<tag_name>.  where
<j> is an integer from 1 to n, where n is at most the value of
PRIMER_NUM_RETURN.

In the descriptions below, 'i,n' represents a start/length pair,
's' represents a string, x represents an arbitrary integer, and f
represents a float.

PRIMER_ERROR=s (*)

s describes user-correctible errors detected in the input
(separated by semicolons).  This tag is absent if there are no
errors.

PRIMER_LEFT=i,n

The selected left primer (the primer to the left in the input
sequence).  i is the 0-based index of the start base of the
primer, and n is t its length.

PRIMER_RIGHT=i,n

The selected right primer (the primer to the right in the input
sequence).  i is the 0-based index of the last base of the
primer, and n is its length.

PRIMER_INTERNAL_OLIGO=i,n

The selected internal oligo. Primer3 outputs this tag if
PRIMER_PICK_INTERNAL_OLIGO was non-0.  If primer3 fails to pick a
middle oligo upon request, this tag will not be output.  i is the
0-based index of start base of the internal oligo, and n is its
length.

PRIMER_PRODUCT_SIZE=x

x is the product size of the PCR product.

PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_EXPLAIN=s (*)

s is a (more or less) self-documenting string containing
statistics on the possiblities that primer3 considered in
selecting a single oligo.  For example

PRIMER_LEFT_EXPLAIN=considered 62, too many Ns 53, ok 9
PRIMER_RIGHT_EXPLAIN=considered 62, too many Ns 53, ok 9
PRIMER_INTERNAL_OLIGO_EXPLAIN=considered 87, too many Ns 39, overlap excluded region 40, ok 8

All the categories are exclusive, except the 'considered' category.

PRIMER_PAIR_EXPLAIN=s (*)

s is a self-documenting string containing statistics on picking a
primer pair (plus internal oligo if requested).  For exaple

PRIMER_PAIR_EXPLAIN=considered 81, unacceptable product size 49, no internal oligo 32, ok 0

All the categories are exclusive, except the 'considered' category.

In some cases primer3 will examine a primer pair before it
discovers that one of the primers in the pair violates specified
constraints.  In this case PRIMER_PAIR_EXPLAIN might have a non-0
number 'considered', even though one or more of
PRIMER_LEFT_EXPLAIN, PRIMER_RIGHT_EXPLAIN, or
PRIMER_INTERNAL_OLIGO_EXPLAIN has 'ok 0'.

PRIMER_PAIR_PENALTY=f

The value of the objective function for this pair (lower is better).

PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_PENALTY=f

The contribution of this individual primer or oligo to the
objective function.

PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_SEQUENCE=s

The actual sequence of the oligo. The sequence of left primer and
internal oligo is presented 5' -> 3' on the same strand as the
input SEQUENCE (which must be presented 5' -> 3').  The sequence
of the right primer is presented 5' -> 3' on the opposite strand
from the input SEQUENCE.

PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_TM=f

The melting TM for the selected oligo.

PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_GC_PERCENT=f

The percent GC for the selected oligo (denominator is the number
of non-ambiguous bases).

PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_SELF_ANY=f
PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_SELF_END=f

The self-complementarity measures for the selected oligo.

PRIMER_PAIR_COMPL_ANY=f
PRIMER_PAIR_COMPL_END=f

The inter-pair complementarity measures for the selected left and
right primer

PRIMER_WARNING=s (*)

s lists warnings generated by primer (separated by semicolons);
this tag is absent if there are no warnings

PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_PROBLEMS=s

s lists the problems (constraint violations) associated
with the corresponding primer oligo.  Generated when
P3_SHOW_OLIGO_PROBLEMS is true (non zero), and
primer3 was forced to choose a primer or oligo
that did not satisfy specified design constraints
(as when PRIMER_PICK_ANYWAY=1 and PRIMER...INPUT
is specified).


PRIMER_{LEFT,RIGHT,PAIR}_MISPRIMING_SCORE=f, s

f is the maximum mispriming score for the right primer
against any sequence in the given PRIMER_MISPRIMING_LIBRARY;
s is the id of corresponding library sequence.
PRIMER_PAIR_MISPRIMING_SCORE is the maximum sum of
mispriming scores in any single library sequence (perhaps a
more reasonable estimator of the likelihood of mispriming).

PRIMER_{LEFT,RIGHT,PAIR}_TEMPLATE_MISPRIMING=f

Analogous to PRIMER_{LEFT,RIGHT,PAIR}_MISPRIMING_SCORE, except that
these output tags apply to mispriming within the template sequence.
This often arises, for example, in genes with repeated exons. For
backward compatibility, these tags only appear if the corresponding
input tags have defined values.

PRIMER_PRODUCT_TM=f

f is the melting temperature of the product. Calculated using
equation (iii) from the paper [Rychlik W, Spencer WJ and Rhoads
RE (1990) "Optimization of the annealing temperature for DNA
amplification in vitro", Nucleic Acids Res 18:6409-12
http://www.pubmedcentral.nih.gov/articlerender.fcgi?tool=pubmed&pubmedid=2243783].
Printed only if a non-default value of PRIMER_MAX_PRODUCT_TM or
PRIMER_MIN_PRODUCT_TM is specified.

PRIMER_PRODUCT_TM_OLIGO_TM_DIFF=f

f is the difference between the melting temperature of the
product and the melting temperature of the less stable primer.
Printed only if PRIMER_MAX_PRODUCT_TM or PRIMER_MIN_PRODUCT_TM is
specified.

PRIMER_PAIR_T_OPT_A=f

f is T sub a super OPT from equation (i) in [Rychlik W, Spencer
WJ and Rhoads RE (1990) "Optimization of the annealing
temperature for DNA amplification in vitro", Nucleic Acids Res
18:6409-12
http://www.pubmedcentral.nih.gov/articlerender.fcgi?tool=pubmed&pubmedid=2243783].
Printed only if PRIMER_MAX_PRODUCT_TM or PRIMER_MIN_PRODUCT_TM is
specified.

PRIMER_INTERNAL_OLIGO_MISHYB_SCORE=f, s

f is the maximum mishybridization score for the right primer
against any sequence in the given
PRIMER_INTERNAL_OLIGO_MISHYB_LIBRARY; s is the id of
corresponding library sequence.

PRIMER_{LEFT,RIGHT,INTERNAL_OLIGO}_MIN_SEQ_QUALITY=i

i is the minimum _sequence_ quality within the primer
or oligo (not to be confused with the PRIMER_PAIR_QUALITY
output tag, which is really the value of the objective
function.)

PRIMER_{LEFT,RIGHT}_END_STABILITY=f

f is the delta G of disruption of the five 3' bases of the
primer.

PRIMER_STOP_CODON_POSITION=i

i is the position of the first base of the stop codon,
if primer3 found one, or -1 if primer3 did not.  Printed
only if the input tag PRIMER_START_CODON_POSITION with a
non-default value is supplied.


EXAMPLE OUTPUT
--------------
You should run it yourself.  Use the file 'example' in this
directory as input.

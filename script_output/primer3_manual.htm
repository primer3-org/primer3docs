<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
        "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1" http-equiv="content-type">
  <title>primer3 release 2.0.0 - Readme</title>
  <style type="text/css">
  body {
  background-color:white;
  color:black;
  font-size:100.01%;
  margin:0;
  min-width:41em;
  padding:5px;
  text-align:left;
  }
  td {
  font-size:0.78em;
  }
  h2 {
  padding-top:1.2em;
  }
  h3 {
  padding-top:1.2em;
  }
  div#page {
  background:#FFFFFF;
  margin:25px;
  padding:0;
  text-align:left;
  width:850px;
  }
  </style>
</head>
<body>
<div id="page">
<h2>Index of contents</h2><p>
<a href="#copyrightLicense">1. COPYRIGHT AND LICENSE</a><br>
<a href="#introduction">2. INTRODUCTION</a><br>
<a href="#citationRequest">3. CITING PRIMER3</a><br>
<a href="#contact">4. REPORTING BUGS AND PROBLEMS AND SUGGESTING ENHANCEMENTS</a><br>
<a href="#licenseExplain">5. FAIR USE OF PRIMER3</a><br>
<a href="#installLinux">6. INSTALLATION INSTRUCTIONS - UNIX/LINUX</a><br>
<a href="#installMac">7. INSTALLATION INSTRUCTIONS - Mac OSX</a><br>
<a href="#installWindows">8. INSTALLATION INSTRUCTIONS - WINDOWS</a><br>
<a href="#buildOsX">9. BUILDING A Mac OSX UNIVERSAL BINARY</a><br>
<a href="#systemRequirements">10. SYSTEM REQUIREMENTS</a><br>
<a href="#invokingPrimer3">11. INVOKING primer3_core</a><br>
<a href="#commandLineTags">12. COMMAND LINE ARGUMENTS</a><br>
<a href="#inputOutputConventions">13. INPUT AND OUTPUT CONVENTIONS</a><br>
<a href="#migrateTags">14. HOW TO MIGRATE TAGS TO VERSION 4</a><br>
<a href="#sequenceTags">15. "SEQUENCE" INPUT TAGS</a><br>
<a href="#globalTags">16. "GLOBAL" INPUT TAGS</a><br>
<a href="#programTags">17. "PROGRAM" INPUT TAGS</a><br>
<a href="#calculatePenalties">18. HOW PRIMER3 CALCULATES THE PENALTY VALUE</a><br>
<a href="#fileFormat">19. PRIMER3 FILE FORMAT</a><br>
<a href="#example">20. AN EXAMPLE</a><br>
<a href="#outputTags">21. OUTPUT TAGS</a><br>
<a href="#exampleOutput">22. EXAMPLE OUTPUT</a><br>
<a href="#pickAdvice">23. ADVICE FOR PICKING PRIMERS</a><br>
<a href="#cautions">24. CAUTIONS</a><br>
<a href="#findNoPrimers">25. WHAT TO DO IF PRIMER3 CANNOT FIND ANY PRIMERS?</a><br>
<a href="#earlierVersions">26. DIFFERENCES FROM EARLIER VERSIONS</a><br>
<a href="#exitStatusCodes">27. EXIT STATUS CODES</a><br>
<a href="#webInterface">28. THE PRIMER3 WWW INTERFACE</a><br>
<a href="#acknowledgments">29. ACKNOWLEDGMENTS</a><br>
</p>
<h2><a name="copyrightLicense">1. COPYRIGHT AND LICENSE</a></h2>

<pre>Copyright (c) 1996,1997,1998,1999,2000,2001,2004,2006,2007,2008
Whitehead Institute for Biomedical Research, Steve Rozen
(http://purl.com/STEVEROZEN/), Andreas Untergasser and Helen Skaletsky All rights
reserved.

    This file is part of the primer3 suite and libraries.

    The primer3 suite and libraries are free software;
    you can redistribute them and/or modify them under the terms
    of the GNU General Public License as published by the Free
    Software Foundation; either version 2 of the License, or (at
    your option) any later version.

    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this software (file gpl-2.0.txt in the source
    distribution); if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
</pre>

<h2><a name="introduction">2. INTRODUCTION</a></h2>

<p>Primer3 picks primers for PCR reactions, considering as criteria:
<br>
o oligonucleotide melting temperature, size, GC content,
  and primer-dimer possibilities,<br>
<br>
o PCR product size,<br>
<br>
o positional constraints within the source (template) sequence, and<br>
<br>
o possibilities for ectopic priming (amplifying the wrong sequence)<br>
<br>
o many other constraints.<br>
<br>
All of these criteria are user-specifiable as constraints, and
some are specifiable as terms in an objective function that
characterizes an optimal primer pair.<br>
<br>
Whitehead Institute for Biomedical Research provides a basic
web-based front end to primer3 named primer3web at
<a href="http://fokker.wi.mit.edu/cgi-bin/primer3/primer3_www.cgi">http://fokker.wi.mit.edu/cgi-bin/primer3/primer3_www.cgi</a><br>
<br>
Wageningen University Laboratory of Bioinformatics provides a enhanced 
web-based front end to primer3 named primer3plus at
<a href="http://www.bioinformatics.nl/cgi-bin/primer3plus/primer3plus.cgi">http://www.bioinformatics.nl/cgi-bin/primer3plus/primer3plus.cgi</a></p>

<h2><a name="citationRequest">3. CITING PRIMER3</a></h2>

<p>We request but do not require that use of this software be cited in
publications as<br>
<br>
Steve Rozen and Helen J. Skaletsky (2000) Primer3 on the WWW for
general users and for biologist programmers.
In: Krawetz S, Misener S (eds) Bioinformatics Methods and
Protocols: Methods in Molecular Biology.  Humana Press, Totowa,
NJ, pp 365-386<br>
<br>
The paper is available at
<a href="http://jura.wi.mit.edu/rozen/papers/rozen-and-skaletsky-2000-primer3.pdf">http://jura.wi.mit.edu/rozen/papers/rozen-and-skaletsky-2000-primer3.pdf</a><br>
<br>	
Source code available at <a href="http://sourceforge.net/projects/primer3/">http://sourceforge.net/projects/primer3/</a>.</p>

<h2><a name="contact">4. REPORTING BUGS AND PROBLEMS AND SUGGESTING ENHANCEMENTS</a></h2>

<p>For error reports or requests for enhancements, please send e-mail
WHERE TO SEND EMAIL?
.</p>

<h2><a name="licenseExplain">5. FAIR USE OF PRIMER3</a></h2>

<p>
The development of primer3 is promoted by a small group of 
enthusiastic scientists mainly in their free time.They do not gain 
any financial profit with primer3.<br>
<br>
There are two groups of primer3 users: end users, who run 
primer3 to pick their primers and programmers, who use primer3 
in their scripts or software packages. We encourage both to use 
primer3.
<br>
<br>
If you are an end user, we request but do not
require that use of this software be cited in publications
as listed above under CITING PRIMER3.
<br>
<br>
If you are a programmer, you  will see that primer3 is now distributed
under teh GNU  General Public License, version  2 or (at  your option) any
later version of the License (GPL2). 

As we understand it, if you include parts of the primer3 sourde code
in your source code or link to primer3 binary libraries in your
executable, you have to release your software also under GPL2. If you
only call primer3 from your software and interpret its output, you can
use any license you want for your software. If you modify primer3 and
then release your modified sofware, you have to release your
modifications in source code under GPL2 as well.
<br>
<br>
We chose GPL2 because we wanted primer3 to evolve 
and for the improvements find their way back into the main 
distribution. So if you make useful enhancements, 
please send us the code (Andreas, send the code to who?)
If you are programming a new web 
interface which runs primer3, please include in the about page 
of the tool the sentence "&lt;your software name&gt; uses primer3 
version ...". Please consider releasing your software under GPL2 
as well, especially if you do not want to maintain it 
in the future. 
<br>
<br>
There is no need to ask us for 
permission to include our primer in your tools
but we would be happy to receive an e-mail to inform us about (WHERE TO SEND EMAIL?)
your tool. If there are any issues / bugs / suggestions for 
primer3, please let us know so we can improve it.</p>

<h2><a name="installLinux">6. INSTALLATION INSTRUCTIONS - UNIX/LINUX</a></h2>

<p>Unzip and untar the distribution.<br>
<br>
DO NOT do this on a PC -- primer3_core will not compile if pc
newlines get inserted into the source files.  Instead, move the
distribution (primer3_&lt;release&gt;.tar.gz) to Unix/Linux, and then<br>
<br>
$ unzip primer3_1.0.1.tar.gz<br>
$ tar xvf primer3_1.0.1.tar<br>
$ cd primer3_1.0.1/src<br>
<br>
If you do not use gcc, modify the makefile to
  use your (ANSI) C compiler and appropriate 
  compile and link flags.<br>
<br>
$ make all<br>
<br>
# Warnings about pr_release being unused are harmless.<br>
# You should have created executables primer3_core, ntdpal,<br>
# olgotm, and long_seq_tm_test<br>
<br>
$ make test<br>
<br>
# You should not see 'FAILED' during the tests.<br>
<br>
If your perl command is not called perl (for example, if it is
called perl5) you will have to modify the 
Makefile in the test/ directory.<br>
<br>
ntdpal (NucleoTide Dynamic Programming ALignment) is a
stand-alone program that provides primer3's alignment
functionality (local, a.k.a. Smith-Waterman, global,
a.k.a. Needleman-Wunsch, plus "half global").  It is provided
strictly as is; for further documentation please see the code.</p>

<h2><a name="installMac">7. INSTALLATION INSTRUCTIONS - Mac OSX</a></h2>

<p>How to install this software<br>
============================<br>
<br>
1.  Double click on the .tar.gz file to extract the archive.<br>
<br>
2.  The binary files are located in the 'bin' [for 'binary'] 
    folder<br>
<br>
3.  (Optional) To run the tests, cd to the new directory and 
    then the test folder<br>
<br>
4.  (Optional) Within this folder run:
	a. 'perl -w p3test.pl'<br>
<br>
5.  (Optional) You should not see 'FAILED' during the tests.<br>
<br>
6.  (Optional) *NOTE*:  If your perl command is not called 
    perl (for example, if it is called perl5) you will have 
    to modify the internals of the test scripts).<br>
<br>
7.	Copy the following files to a location of your choice:<br>
	a.  bin/long_seq_tm_test<br>
	b.  bin/ntdpal<br>
	c.  bin/oligotm<br>
	d.  bin/primer3_core<br>
<br>
8.	(Optional) Make sure this location is within your $PATH 
    (see below)<br>
<br>
<br>
Where to put the binary files<br>
=============================<br>
<br>
A good place to put these is within ~/bin/ (this means in 
your home folder, within a folder named `bin` [for 'binary']).<br>
<br>
You can also just drag the 'bin' folder to a location within 
your home directory.<br>
<br>
You can certainly also copy the files within 'bin' to 
/usr/local/bin (if you are an administrator) or another 
similar location.<br>
<br>
You may need to adjust the permissions on the binaries if 
you get fancy.<br>
<br>
<br>
Add the location to your $PATH<br>
==============================<br>
<br>
This is an optional step, but it will allow you to run 
primer3 in any directory on your machine as your user just 
by typing its name (primer3_core).<br>
<br>
*** You should be very careful when altering your $PATH as 
things can go very wrong.  See below for an alternate 
method. *** <br>
<br>
If you added the binaries to /usr/local/bin, then you do 
not need to do this.<br>
<br>
If you added the binaries to a local directory (let's say 
~/bin/), do the following:<br>
<br>
	1.  Edit your ~/.bash_profile.  You can edit this on 
        the command line (Terminal) with:<br>
<br>
		nano ~/.bash_profile<br>
<br>
	2. Add the following line if it is not present 
       (replacing '~/bin' if you used another directory):<br>
<br>
		PATH=$PATH:~/bin/<br>
<br>
	3. If a PATH line *is* present, ensure you add a colon 
       to the end of what is there and then the directory, 
       so if you have something like:<br>
<br>
		a) PATH=$PATH:/usr/local/genome/bin:/sw/bin<br>
<br>
       make it look like:<br>
<br>
		b) PATH=$PATH:/usr/local/genome/bin:/sw/bin:~/bin<br>
<br>
	4. Quit and restart terminal for the changes to take 
       effect.<br>
<br>	
If you don't add the location to your $PATH<br>
===========================================<br>
<br>
Assuming you don't want to modify your $PATH, you can still 
run the binaries.  Let's assume you put the files in 
'~/bin/.  You may run primer3_core by doing either of the 
following:<br>
<br>
	1. ~/bin/primer3_core &lt; yourInputFile<br>
	2. /Users/&lt;your username&gt;/bin/primer3_core < yourInputFile<br>
<br>
The first option is just a shortcut to the second.</p>

<h2><a name="installWindows">8. INSTALLATION INSTRUCTIONS - WINDOWS</a></h2>

<p>How to install this software<br>
============================<br>
<br>
1. Unzip the '.zip' file downloaded from SourceForge.net<br>
2. You will create a primer3-1.1.3 folder in the location 
   where the file was unzipped<br>
3. You may copy the files from the 'bin' directory of the 
   primer3-1.1.3 folder to a location of your choice.  
   The exact same files are located within the 'src' folder 
   so that the tests may be run (windows does not allow 
   relative paths in shortcuts).<br>
<br>
Running the tests<br>
=================<br>
We are working on integrating the test suite to windows.  
However, substantial differences between windows and 
Unix/Linux require some differences in the test script.<br>
<br>
You must also install a perl distribution to run the 
windows tests.<br>
<br>
We *strongly* recommend you install ActiveState perl 
(http://www.activestate.com/products/activeperl/) 
as this was used to test our primer3 builds, and it is 
known to work.<br>
<br>
***The perl test script for windows has a different name, 
at the moment, than that for the unix/linux versions. See 
below.***<br>
<br>
1. Click on 'Start > Run...'<br>
2. Type 'cmd' into the space provided<br>
3. Hit enter (or select 'OK')<br>
4. Navigate to the location of the tests:<br>
<br>
    A. if you put it in <br>
    C:/Documents and Settings/YourName/primer3-1.1.3/test/,<br>
    you would type <br>
    'cd c:/Documents and Settings/YourName/primer3-1.1.3/test/'<br>
    <br>
    B. you can also type 'cd ' (don't forget the space 
    after cd) and drag the primer3-1.1.3 folder onto the 
    command-line window from windows explorer, this will 
    fill in the location for you<br>
<br>
5. On the command line, run 'perl p3testz.pl -w' in this 
   directory<br>
6. You should see [OK] for all of the tests.<br>
<br>
Running the software<br>
====================<br>
<br>
To run the program, you must do so from the MS-DOS 
command-line.  The intricacies of the DOS commandline are 
beyond the scope of this document.  Google for more 
information, if needed.  Here is a quick summary:<br>
<br>
1. Click on 'Start > Run...'<br>
2. Type 'cmd' into the space provided<br>
3. Hit enter (or select 'OK')<br>
4. Navigate to the location of the binary:<br>
<br>
    A. if you put it in<br>
    C:/Documents and Settings/YourName/Temp,<br>
    you would type <br>
    'cd c:/Documents and Settings/YourName/Temp'<br>
<br>
    B. you can also type 'cd ' (don't forget the space 
    after cd) and drag the primer3 folder onto the 
    command-line window from windows explorer, this will 
    fill in the location for you<br>
<br>
5. Run the example file by typing:<br>
<br>
    primer3_core.exe < example<br>
<br>
Other files may be run in a similar fashion.  If your input 
filename is 'MyData.txt' you can run primer3 using this 
file (in the correct format; see README) with:<br>
<br>
    primer3_core.exe < MyData.txt<br>
<br>
If your file is not in the folder containing 
primer3_core.exe, you could run the program from the 
primer3_core folder using:<br>
<br>
    primer3_core.exe < c:/someOtherFolder/someOtherFolder/MyData.txt<br>
<br>
Finally, if you want to run the program without going to 
its folder, assuming primer3_core.exe is in c:/Temp, you 
could run:<br>
<br>
    c:/Temp/primer3_core.exe < c:/someOtherFolder/someOtherFolder/MyData.txt</p>

<h2><a name="buildOsX">9. BUILDING A Mac OSX UNIVERSAL BINARY</a></h2>

<p>** To build a processor-native, non-universal binary of primer3, 
the following is unneccesary**.<br>
<br>
The instructions above should be sufficient.<br>
<br>
A pre-compiled, universal binary download for OSX is available from 
http://sourceforge.net/projects/primer3/ for the current release.<br>
<br>
These instructions assume you want to build binaries compatible 
with *both* of the current processor architectures used by the Apple
platform (i,e. the binaries will be run on both PPC and intel platforms).<br>
<br>
Provided you have the OS X developer tools installed
(you can download from http://developer.apple.com after
registering for a free account), you can compile a universal
build (intel and PPC native) of primer3.<br>
<br>
o you must be running OS X > 10.4 and should have the most
	recent version of XCode<br>
o run `make -f Makefile.OSX.Leopard all` if you run OS X 10.5<br>
o run `make -f Makefile.OSX.Tiger all` is you run OS X 10.4<br>
o run the tests as directed above<br>
<br>
Additional instructions for 'installing' the binaries may be found in
the README.OSX.txt.<br>
<br>
You should be able to compile a 3-way binary which includes PPC64 support 
(intel, PPC, PPC64) by adding the `-arch ppc64` flag to the 
end of both the CFLAGS and LDFLAGS lines at the top of Makefile.OSX.  
This has not been tested.</p>

<h2><a name="systemRequirements">10. SYSTEM REQUIREMENTS</a></h2>

<p>Please see <a href="http://sourceforge.net/projects/primer3/">http://sourceforge.net/projects/primer3/</a> for up-to-date
information.  Primer3 should compile on any Linux/Unix system
including MacOS 10 and on other systems with POSIX C
(e.g. MSWindows).  The Makefile may need to be modified for
compilation with C compilers other than gcc.
</p>

<h2><a name="invokingPrimer3">11. INVOKING primer3_core</a></h2>

<p>By default, the executable program produced by the Makefile is
called primer3_core.  This is the C program that does the heavy
lifting of primer picking.  There is also a more user-friendly
web interface (distributed separately).<br>
<br>
The command line for primer3 is:<br>
<br>
primer3_core [ -format_output ] [ -strict_tags ] < input_file.txt<br>
<br>
A complete list of valid command line tags can be found in 
COMMAND LINE TAGS below.<br>
<br>
WARNING: primer3_core only reads its input on stdin, so the usual
unix convention of<br>
<br>
primer3_core input_file.txt<br>
<br>
*will not work*.  Primer3_core will just sit there forever
waiting for its input on stdin.</p>

<h2><a name="commandLineTags">12. COMMAND LINE ARGUMENTS</a></h2>

<p>These parameters are read from command line:</p>
<h3>-about</h3>
<p>This argument generates one line of output: primer3 release 2.0.0
and terminates the program. This allows scripts to 
query primer3 for its version.</p>

<h3>-format_output</h3>
<p>This argument indicates that primer3_core should generate
user-oriented (rather than program-oriented) output.</p>

<h3>-strict_tags</h3>
<p>This argument indicates that primer3_core should generate
a fatal error if there is any tag in the input that
it does not recognize.</p>

<h3>-p3_settings_file=file_path</h3>
<p>This argument specifies a settings file,
<i>file_path</i>. Primer3 reads the global 
("PRIMER_...") parameters from this file first. 
Tags appearing in the settings file overwrite
default primer3 settings. The values set in
the settings files can be overwritten 
by tags in the command line input. See 
primer3 file documentation for details on the file 
format.</p>

<h3>-io_version=n</h3>
<p>This argument directs primer3 to use
io version <i>n</i> input and output conventions.
<i>n</i> can be 3 (for mostly backward
compatible behavior) or 4.
-io_version=4 is required
to use functionality that is new in release 2.0.0.</p>

<h3>-2x_compat</h3>
<p>This argument is no longer supported.</p>


<h2><a name="inputOutputConventions">13. INPUT AND OUTPUT CONVENTIONS</a></h2>

<p>By default, primer3 accepts input in Boulder-io format, a
pre-XML, pre-RDF, text-based input/output format for
program-to-program data interchange.  By default, primer3 also
produces output in the same format.<br>
<br>
When run with the -format_output command-line flag, primer3
prints a more user-oriented report for each sequence.<br>
<br>
Primer3 exits with 0 status if it operates correctly.  See EXIT
STATUS CODES below for additional information.<br>
<br>
The syntax of the version of Boulder-io recognized by primer3 is
as follows:</p>
<pre>
  o Input consists of a sequence of RECORDs.

  o A RECORD consists of a sequence of (TAG,VALUE) pairs, each terminated
    by a newline character (\n). A RECORD is terminated by  '='
    appearing by itself on a line.

  o A (TAG,VALUE) pair has the following requirements:

    o the TAG must be immediately (without spaces) 
          followed by '='.
    o the pair must be terminated by a newline character.
</pre>
<p>An example of a legal (TAG,VALUE) pair is<br>
<br>
<a href="#SEQUENCE_ID">SEQUENCE_ID</a>=my_marker<br>
<br>
and an example of a BOULDER-IO record is<br>
<br>
<a href="#SEQUENCE_ID">SEQUENCE_ID</a>=test1<br>
<a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a>=GACTGATCGATGCTAGCTACGATCGATCGATGCATGCTAGCTAGCTAGCTGCTAGC<br>
=<br>
<br>
Many records can be sent, one after another. Below is an example
of three different records which might be passed through a
boulder-io stream:<br>
<br>
<a href="#SEQUENCE_ID">SEQUENCE_ID</a>=test1<br>
<a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a>=GACTGATCGATGCTAGCTACGATCGATCGATGCATGCTAGCTAGCTAGCTGCTAGC<br>
=<br>
<a href="#SEQUENCE_ID">SEQUENCE_ID</a>=test2<br>
<a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a>=CATCATCATCATCGATGCTAGCATCNNACGTACGANCANATGCATCGATCGT<br>
=<br>
<a href="#SEQUENCE_ID">SEQUENCE_ID</a>=test3<br>
<a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a>=NACGTAGCTAGCATGCACNACTCGACNACGATGCACNACAGCTGCATCGATGC<br>
=<br>
<br>
Primer3 reads boulder-io on stdin and echos its input and returns
results in boulder-io format on stdout.  Primer3 indicates many
user-correctable errors by a value in the <a href="#PRIMER_ERROR">PRIMER_ERROR</a> tag (see
below) and indicates other errors, including system configuration
errors, resource errors (such out-of-memory errors), and detected
programming errors by a message on stderr and a non-zero exit
status.<br>
<br>
Below is the list of input tags that primer3 recognizes.
Primer3 echos and ignores any tags it does not recognize, unless
the -strict_tags flag is set on the command line, in which case
primer3 prints an error in the <a href="#PRIMER_ERROR">PRIMER_ERROR</a> output tag (see
below), and prints additional information on stdout; this option
can be useful for debugging systems that incorporate primer.<br>
<br>
Except for tags with the type "interval list" each tag is allowed
only ONCE in any given input record.  This restriction is not
systematically checked in this beta release: use care.<br>
<br>
There are 2 major classes of input tags,  "Sequence" input tags
and "Global" input tags as described below.</p>

<h2><a name="migrateTags">14. HOW TO MIGRATE TAGS TO VERSION 4</a></h2>

<p>From primer3 v2.0 many tags were modified and new tags 
were introduced. The new primer3 tags are designed with the 
idea in mind that not humans use primer3, but computer scripts 
and other programs. The modifications make it easier for 
programmers to read the output and write the input for primer3.<br>
<br>
For temporal backward compartibility a flag can be set at 
command line (-io_version=3) which allows the use of the "old" 
primer3 tags. Please be aware that the new functionality is 
not available with the old tags. Furthermore the primer3 default 
values have changed in version 2.0. We strongly recomment to 
adapt your software to the new tags because this backward 
compartibility might be dropped in the next versions.<br>
<br>
There are three classes of input: "Sequence" input tags describe 
a particular input sequence to primer3, and are reset after 
every boulder record (now starting with SEQUENCE_).  "Global" 
input tags describe the general parameters that primer3 should 
use in its searches, and the values of these tags persist 
between input boulder records until or unless they are 
explicitly reset (now starting with PRIMER_). "Program" 
parameters that deal with the behavior of the primer3 program 
itself (now starting with P3_). See below for a list of the 
modified tags.<br>
<br>
The handling of PRIMER_TASK changed completely. In the past we 
used it to tell primer3 what task to perform. Now the task is 
complemented with <a href="#PRIMER_PICK_RIGHT_PRIMER">PRIMER_PICK_RIGHT_PRIMER</a>, 
<a href="#PRIMER_PICK_INTERNAL_OLIGO">PRIMER_PICK_INTERNAL_OLIGO</a> and <a href="#PRIMER_PICK_LEFT_PRIMER">PRIMER_PICK_LEFT_PRIMER</a>, which 
specify which primers are to be picked.<br>
<br>
These Tags are modified:<br>
<br>
The "per sequence" tags:</p>
<pre>
NEW VERSION                       - OLD VERSION
----------------------------------------------------------------------------------------                       
<a href="#SEQUENCE_ID">SEQUENCE_ID</a>                       - PRIMER_SEQUENCE_ID
<a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a>                 - SEQUENCE
<a href="#SEQUENCE_QUALITY">SEQUENCE_QUALITY</a>                  - PRIMER_SEQUENCE_QUALITY
<a href="#SEQUENCE_INCLUDED_REGION">SEQUENCE_INCLUDED_REGION</a>          - INCLUDED_REGION
<a href="#SEQUENCE_TARGET">SEQUENCE_TARGET</a>                   - TARGET
<a href="#SEQUENCE_EXCLUDED_REGION">SEQUENCE_EXCLUDED_REGION</a>          - EXCLUDED_REGION
<a href="#SEQUENCE_START_CODON_POSITION">SEQUENCE_START_CODON_POSITION</a>     - PRIMER_START_CODON_POSITION
<a href="#SEQUENCE_PRIMER">SEQUENCE_PRIMER</a>                   - PRIMER_LEFT_INPUT
<a href="#SEQUENCE_PRIMER_REVCOMP">SEQUENCE_PRIMER_REVCOMP</a>           - PRIMER_RIGHT_INPUT


<a href="#SEQUENCE_INTERNAL_OLIGO">SEQUENCE_INTERNAL_OLIGO</a>           - PRIMER_INTERNAL_OLIGO_INPUT
<a href="#SEQUENCE_INTERNAL_EXCLUDED_REGION">SEQUENCE_INTERNAL_EXCLUDED_REGION</a> - PRIMER_INTERNAL_OLIGO_EXCLUDED_REGION

--------------------------------------------------------------------------------
The "global" tags:

NEW VERSION                       - OLD VERSION

<a href="#PRIMER_TASK">PRIMER_TASK</a>                       - PRIMER_TASK (modified use)
<a href="#PRIMER_PICK_RIGHT_PRIMER">PRIMER_PICK_RIGHT_PRIMER</a>          - --- did not exist
<a href="#PRIMER_PICK_INTERNAL_OLIGO">PRIMER_PICK_INTERNAL_OLIGO</a>        - PRIMER_PICK_INTERNAL_OLIGO (modified use)
<a href="#PRIMER_PICK_LEFT_PRIMER">PRIMER_PICK_LEFT_PRIMER</a>           - --- did not exist

<a href="#PRIMER_PAIR_WT_TEMPLATE_MISPRIMING">PRIMER_PAIR_WT_TEMPLATE_MISPRIMING</a>- PRIMER_PAIR_WT_TEMPLATE_MISPRIMING (modified use)
<a href="#PRIMER_WT_TEMPLATE_MISPRIMING">PRIMER_WT_TEMPLATE_MISPRIMING</a>     - PRIMER_WT_TEMPLATE_MISPRIMING (modified use)
<a href="#PRIMER_MAX_LIBRARY_MISPRIMING">PRIMER_MAX_LIBRARY_MISPRIMING</a>     - PRIMER_MAX_MISPRIMING
<a href="#PRIMER_INTERNAL_MAX_LIBRARY_MISHYB">PRIMER_INTERNAL_MAX_LIBRARY_MISHYB</a>- PRIMER_INTERNAL_OLIGO_MAX_MISHYB
<a href="#PRIMER_PAIR_MAX_LIBRARY_MISPRIMING">PRIMER_PAIR_MAX_LIBRARY_MISPRIMING</a>- PRIMER_PAIR_MAX_MISPRIMING
<a href="#PRIMER_WT_LIBRARY_MISPRIMING">PRIMER_WT_LIBRARY_MISPRIMING</a>      - PRIMER_WT_REP_SIM
<a href="#PRIMER_INTERNAL_WT_LIBRARY_MISHYB">PRIMER_INTERNAL_WT_LIBRARY_MISHYB</a> - PRIMER_INTERNAL_WT_REP_SIM
<a href="#PRIMER_INTERNAL_WT_LIBRARY_MISPRIMING">PRIMER_INTERNAL_WT_LIBRARY_MISPRIMING</a> - PRIMER_INTERNAL_WT_REP_SIM
<a href="#PRIMER_PAIR_WT_LIBRARY_MISPRIMING">PRIMER_PAIR_WT_LIBRARY_MISPRIMING</a> - PRIMER_PAIR_WT_REP_SIM
	
<a href="#PRIMER_SALT_MONOVALENT">PRIMER_SALT_MONOVALENT</a>            - PRIMER_SALT_CONC
<a href="#PRIMER_SALT_DIVALENT">PRIMER_SALT_DIVALENT</a>              - PRIMER_DIVALENT_CONC
<a href="#PRIMER_TM_FORMULA">PRIMER_TM_FORMULA</a>                 - PRIMER_TM_SANTALUCIA

<a href="#PRIMER_WT_SELF_ANY">PRIMER_WT_SELF_ANY</a>                - PRIMER_WT_COMPL_ANY
<a href="#PRIMER_WT_SELF_END">PRIMER_WT_SELF_END</a>                - PRIMER_WT_COMPL_END

<a href="#P3_FILE_FLAG">P3_FILE_FLAG</a>                      - PRIMER_FILE_FLAG
<a href="#P3_COMMENT">P3_COMMENT</a>                        - PRIMER_COMMENT

<a href="#PRIMER_INTERNAL_SALT_MONOVALENT">PRIMER_INTERNAL_SALT_MONOVALENT</a>   - PRIMER_INTERNAL_OLIGO_SALT_CONC
<a href="#PRIMER_INTERNAL_SALT_DIVALENT">PRIMER_INTERNAL_SALT_DIVALENT</a>     - PRIMER_INTERNAL_OLIGO_DIVALENT_CONC
<a href="#PRIMER_INTERNAL_WT_SELF_ANY">PRIMER_INTERNAL_WT_SELF_ANY</a>       - PRIMER_IO_WT_COMPL_ANY
<a href="#PRIMER_INTERNAL_WT_SELF_END">PRIMER_INTERNAL_WT_SELF_END</a>       - PRIMER_IO_WT_COMPL_END

The following tags INTERNAL_OLIGO is replaced by INTERNAL:

<a href="#PRIMER_INTERNAL_OPT_SIZE">PRIMER_INTERNAL_OPT_SIZE</a>          - PRIMER_INTERNAL_OLIGO_OPT_SIZE
<a href="#PRIMER_INTERNAL_MIN_SIZE">PRIMER_INTERNAL_MIN_SIZE</a>          - PRIMER_INTERNAL_OLIGO_MIN_SIZE
<a href="#PRIMER_INTERNAL_MAX_SIZE">PRIMER_INTERNAL_MAX_SIZE</a>          - PRIMER_INTERNAL_OLIGO_MAX_SIZE
<a href="#PRIMER_INTERNAL_OPT_TM">PRIMER_INTERNAL_OPT_TM</a>            - PRIMER_INTERNAL_OLIGO_OPT_TM
<a href="#PRIMER_INTERNAL_MIN_TM">PRIMER_INTERNAL_MIN_TM</a>            - PRIMER_INTERNAL_OLIGO_MIN_TM
<a href="#PRIMER_INTERNAL_MAX_TM">PRIMER_INTERNAL_MAX_TM</a>            - PRIMER_INTERNAL_OLIGO_MAX_TM
<a href="#PRIMER_INTERNAL_MIN_GC">PRIMER_INTERNAL_MIN_GC</a>            - PRIMER_INTERNAL_OLIGO_MIN_GC
<a href="#PRIMER_INTERNAL_OPT_GC_PERCENT">PRIMER_INTERNAL_OPT_GC_PERCENT</a>    - PRIMER_INTERNAL_OLIGO_OPT_GC_PERCENT
<a href="#PRIMER_INTERNAL_MAX_GC">PRIMER_INTERNAL_MAX_GC</a>            - PRIMER_INTERNAL_OLIGO_MAX_GC
<a href="#PRIMER_INTERNAL_DNTP_CONC">PRIMER_INTERNAL_DNTP_CONC</a>         - PRIMER_INTERNAL_OLIGO_DNTP_CONC
<a href="#PRIMER_INTERNAL_DNA_CONC">PRIMER_INTERNAL_DNA_CONC</a>          - PRIMER_INTERNAL_OLIGO_DNA_CONC
<a href="#PRIMER_INTERNAL_SELF_ANY">PRIMER_INTERNAL_SELF_ANY</a>          - PRIMER_INTERNAL_OLIGO_SELF_ANY
<a href="#PRIMER_INTERNAL_MAX_POLY_X">PRIMER_INTERNAL_MAX_POLY_X</a>        - PRIMER_INTERNAL_OLIGO_MAX_POLY_X 
<a href="#PRIMER_INTERNAL_SELF_END">PRIMER_INTERNAL_SELF_END</a>          - PRIMER_INTERNAL_OLIGO_SELF_END
<a href="#PRIMER_INTERNAL_MISHYB_LIBRARY">PRIMER_INTERNAL_MISHYB_LIBRARY</a>    - PRIMER_INTERNAL_OLIGO_MISHYB_LIBRARY
<a href="#PRIMER_INTERNAL_MIN_QUALITY">PRIMER_INTERNAL_MIN_QUALITY</a>       - PRIMER_INTERNAL_OLIGO_MIN_QUALITY
<a href="#PRIMER_INTERNAL_NUM_NS_ACCEPTED">PRIMER_INTERNAL_NUM_NS_ACCEPTED</a>   - PRIMER_INTERNAL_OLIGO_NUM_NS

The following tags IO is replaced by INTERNAL:

<a href="#PRIMER_INTERNAL_WT_TM_GT">PRIMER_INTERNAL_WT_TM_GT</a>          - PRIMER_IO_WT_TM_GT
<a href="#PRIMER_INTERNAL_WT_TM_LT">PRIMER_INTERNAL_WT_TM_LT</a>          - PRIMER_IO_WT_TM_LT
<a href="#PRIMER_INTERNAL_WT_SIZE_LT">PRIMER_INTERNAL_WT_SIZE_LT</a>        - PRIMER_IO_WT_SIZE_LT
<a href="#PRIMER_INTERNAL_WT_SIZE_GT">PRIMER_INTERNAL_WT_SIZE_GT</a>        - PRIMER_IO_WT_SIZE_GT
<a href="#PRIMER_INTERNAL_WT_GC_PERCENT_LT">PRIMER_INTERNAL_WT_GC_PERCENT_LT</a>  - PRIMER_IO_WT_GC_PERCENT_LT
<a href="#PRIMER_INTERNAL_WT_GC_PERCENT_GT">PRIMER_INTERNAL_WT_GC_PERCENT_GT</a>  - PRIMER_IO_WT_GC_PERCENT_GT
<a href="#PRIMER_INTERNAL_WT_NUM_NS">PRIMER_INTERNAL_WT_NUM_NS</a>         - PRIMER_IO_WT_NUM_NS
<a href="#PRIMER_INTERNAL_WT_SEQ_QUAL">PRIMER_INTERNAL_WT_SEQ_QUAL</a>       - PRIMER_IO_WT_SEQ_QUAL
</pre>
<p>--------------------------------------------------------------------------------<br>
OUTPUT TAGS:<br>
<br>
There are three big changes on the output:<br>
- INTERNAL_OLIGO is now replaced by INTERNAL.<br>
- The first version is numbered 0.<br>
- The "PRODUCT" tags are renamed<br>
<br>
Now all primer related output follows the rule:
PRIMER_{LEFT,RIGHT,INTERNAL,PAIR}_&lt;j&gt;_&lt;tag_name&gt;.
where &lt;j&gt; is an integer from 0 to n, where n is at most the 
value of <a href="#PRIMER_NUM_RETURN">PRIMER_NUM_RETURN</a> - 1.<br>
<br>
This allows easy scripting by using the underscores _ to split 
the name. The first part is PRIMER, the second the type of oligo 
or pair parameters, the third is always a number, starting at 
0 and the rest is used by the tags.<br>
<br>
That affects also (shown for output nr. 5):</p>
<pre>
NEW VERSION                             - OLD VERSION
------------------------------------------------------------------------------------------------------
<a href="#PRIMER_PAIR_4_PENALTY">PRIMER_PAIR_4_PENALTY</a>                   - PRIMER_PAIR_PENALTY_4 (number moved behind PAIR)
<a href="#PRIMER_PAIR_4_PRODUCT_SIZE">PRIMER_PAIR_4_PRODUCT_SIZE</a>              - PRIMER_PRODUCT_SIZE_4 (grouped with PAIR)
<a href="#PRIMER_PAIR_4_PRODUCT_TM">PRIMER_PAIR_4_PRODUCT_TM</a>                - PRIMER_PRODUCT_TM_4 (grouped with PAIR)
<a href="#PRIMER_PAIR_4_PRODUCT_TM_OLIGO_TM_DIFF">PRIMER_PAIR_4_PRODUCT_TM_OLIGO_TM_DIFF</a>  - PRIMER_PRODUCT_TM_OLIGO_TM_DIFF_4 (grouped with PAIR)

<a href="#PRIMER_INTERNAL_EXPLAIN">PRIMER_INTERNAL_EXPLAIN</a>                 - PRIMER_INTERNAL_OLIGO_EXPLAIN

PRIMER_LEFT_4_LIBRARY_MISPRIMING                   - PRIMER_LEFT_4_MISPRIMING_SCORE
PRIMER_INTERNAL_4_LIBRARY_MISHYB                   - PRIMER_INTERNAL_OLIGO_4_MISHYB_SCORE
PRIMER_RIGHT_4_LIBRARY_MISPRIMING                  - PRIMER_RIGHT_4_MISPRIMING_SCORE
PRIMER_PAIR_4_LIBRARY_MISPRIMING                   - PRIMER_PAIR_4_MISPRIMING_SCORE

</pre>

<h2><a name="sequenceTags">15. "SEQUENCE" INPUT TAGS</a></h2>

<p>"Sequence" input tags start with SEQUENCE_... and describe a 
particular input sequence to primer3. They are reset after every 
boulder record. Errors in "Sequence" input tags invalidate the 
current record, but primer3 will continue to process additional 
records.</p>
<table style="text-align: left; width: 800px;" border="1">
</table>
<h2><a name="globalTags">16. "GLOBAL" INPUT TAGS</a></h2>

<p>"Global" input tags start with PRIMER_... and describe the 
general parameters that primer3 should use in its searches. 
The values of these tags persist between input boulder 
records until or unless they are explicitly reset. Errors 
in "Global" input tags are fatal because they invalidate 
the basic conditions under which primers are being picked.<br>
<br>
Because the laboratory detection step using internal oligos is 
independent of the PCR amplification procedure, internal oligo 
tags have defaults that are independent of the parameters that 
govern the selection of PCR primers. For example, the melting 
temperature of an oligo used for hybridization might be 
considerably lower than that used as a PCR primer.
<br></p>
<table style="text-align: left; width: 800px;" border="1">
</table>
<h2><a name="programTags">17. "PROGRAM" INPUT TAGS</a></h2>

<p>"Program" input tags start with P3_... describe the 
parameters that deal with the behavior of the primer3 program 
itself.)</p>
<h2><a name="calculatePenalties">18. HOW PRIMER3 CALCULATES THE PENALTY VALUE</a></h2>

<p>The penalty values in are the most important value of each primer,
because primer3 uses it to choose which primers to select. The 
calculation can be influenced by the weights which allows to 
fine-tune the selection of primers to your needs.<br>
<br>
This section will explain the selection process of primers by 
primer3. In general the selection is a multi step process:<br>
<br>
In the first step, primer3 evaluates every primer that 
can be picked in the region of interest, possibly subject to
constraints due to target regions, product size ranges, and
so forth, that might preclude the use of primers in the
eventually selected primer pairs. In this pass the hard 
limits are tested like <a href="#PRIMER_MAX_GC">PRIMER_MAX_GC</a> or <a href="#PRIMER_MIN_TM">PRIMER_MIN_TM</a>. Primers 
with a GC lower than <a href="#PRIMER_MAX_GC">PRIMER_MAX_GC</a> or a Tm higher than 
<a href="#PRIMER_MIN_TM">PRIMER_MIN_TM</a> are memorized, the primers which fail in one of 
these tests are excluded. Primer3 can be forced to use primers 
failing to pass this test by setting <a href="#PRIMER_PICK_ANYWAY">PRIMER_PICK_ANYWAY</a> to one 
(only available for primers provided by the user).<br>
<br>
In the second step, primer3 calculates a penalty for each
primer. This penalty is the only score by which primer3 
evaluates the primers It is also provided as output 
<a href="#PRIMER_LEFT_4_PENALTY">PRIMER_LEFT_4_PENALTY</a>, <a href="#PRIMER_INTERNAL_4_PENALTY">PRIMER_INTERNAL_4_PENALTY</a> and 
<a href="#PRIMER_RIGHT_4_PENALTY">PRIMER_RIGHT_4_PENALTY</a> (given for primer set Nr. 5). For each 
primer, it is calculated like that:</p>

<h3>Left Primers:</h3>
<pre>
<a href="#PRIMER_LEFT_4_PENALTY">PRIMER_LEFT_4_PENALTY</a> =

   <a href="#If PRIMER_LEFT_4_TM">If PRIMER_LEFT_4_TM</a> &gt; <a href="#PRIMER_OPT_TM">PRIMER_OPT_TM</a> then this is added (+):

       + <a href="#PRIMER_WT_TM_GT">PRIMER_WT_TM_GT</a> * ( <a href="#PRIMER_LEFT_4_TM">PRIMER_LEFT_4_TM</a> - <a href="#PRIMER_OPT_TM">PRIMER_OPT_TM</a> )

   If <a href="#PRIMER_LEFT_4_TM">PRIMER_LEFT_4_TM</a> &lt; <a href="#PRIMER_OPT_TM">PRIMER_OPT_TM</a> then this is added (+):

       + <a href="#PRIMER_WT_TM_LT">PRIMER_WT_TM_LT</a> * ( <a href="#PRIMER_OPT_TM">PRIMER_OPT_TM</a> - <a href="#PRIMER_LEFT_4_TM">PRIMER_LEFT_4_TM</a> )


   If <a href="#PRIMER_LEFT_4_GC_PERCENT">PRIMER_LEFT_4_GC_PERCENT</a> &gt; <a href="#PRIMER_OPT_GC_PERCENT">PRIMER_OPT_GC_PERCENT</a> then 
       this is added (+):

       + <a href="#PRIMER_WT_GC_PERCENT_GT">PRIMER_WT_GC_PERCENT_GT</a> *
            ( <a href="#PRIMER_LEFT_4_GC_PERCENT">PRIMER_LEFT_4_GC_PERCENT</a> - <a href="#PRIMER_OPT_GC_PERCENT">PRIMER_OPT_GC_PERCENT</a> )

   If <a href="#PRIMER_LEFT_4_GC_PERCENT">PRIMER_LEFT_4_GC_PERCENT</a> &lt; <a href="#PRIMER_OPT_GC_PERCENT">PRIMER_OPT_GC_PERCENT</a> then
       this is added (+):

       + <a href="#PRIMER_WT_GC_PERCENT_LT">PRIMER_WT_GC_PERCENT_LT</a> *
            ( <a href="#PRIMER_OPT_GC_PERCENT">PRIMER_OPT_GC_PERCENT</a> - <a href="#PRIMER_LEFT_4_GC_PERCENT">PRIMER_LEFT_4_GC_PERCENT</a> )


   The following section uses &lt;primer length&gt; as part of 
   the term which is given as output in 
   <a href="#PRIMER_LEFT_4">PRIMER_LEFT_4</a>=position,&lt;primer length&gt; 

   If &lt;primer length&gt; &gt; <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> then
       this is added (+):

       + <a href="#PRIMER_WT_SIZE_GT">PRIMER_WT_SIZE_GT</a> *
            ( &lt;primer length&gt; - <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> )

   If &lt;primer length&gt; &lt; <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> then
       this is added (+):

       + <a href="#PRIMER_WT_SIZE_LT">PRIMER_WT_SIZE_LT</a> *
            ( <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> - &lt;primer length&gt; )


   If the primer does not overlap a target then
       this is added (+):
	
       + <a href="#PRIMER_WT_POS_PENALTY">PRIMER_WT_POS_PENALTY</a> * <a href="#PRIMER_LEFT_4_POSITION_PENALTY">PRIMER_LEFT_4_POSITION_PENALTY</a>


   These are allways added (+) to the penalty:

       + <a href="#PRIMER_WT_SELF_ANY">PRIMER_WT_SELF_ANY</a> * <a href="#PRIMER_LEFT_4_SELF_ANY">PRIMER_LEFT_4_SELF_ANY</a>

       + <a href="#PRIMER_WT_SELF_END">PRIMER_WT_SELF_END</a> * <a href="#PRIMER_LEFT_4_SELF_END">PRIMER_LEFT_4_SELF_END</a>

       + <a href="#PRIMER_WT_TEMPLATE_MISPRIMING">PRIMER_WT_TEMPLATE_MISPRIMING</a> *
            <a href="#PRIMER_LEFT_4_TEMPLATE_MISPRIMING">PRIMER_LEFT_4_TEMPLATE_MISPRIMING</a>

       + <a href="#PRIMER_WT_END_STABILITY">PRIMER_WT_END_STABILITY</a> * <a href="#PRIMER_LEFT_4_END_STABILITY">PRIMER_LEFT_4_END_STABILITY</a>

       + <a href="#PRIMER_WT_NUM_NS">PRIMER_WT_NUM_NS</a> * &lt;numbers of N in the selected primer&gt;

       + <a href="#PRIMER_WT_LIBRARY_MISPRIMING">PRIMER_WT_LIBRARY_MISPRIMING</a> * <a href="#PRIMER_LEFT_4_LIBRARY_MISPRIMING">PRIMER_LEFT_4_LIBRARY_MISPRIMING</a>

       + <a href="#PRIMER_WT_SEQ_QUAL">PRIMER_WT_SEQ_QUAL</a> *
            ( <a href="#PRIMER_QUALITY_RANGE_MAX">PRIMER_QUALITY_RANGE_MAX</a> - 
              <a href="#PRIMER_LEFT_4_MIN_SEQ_QUALITY">PRIMER_LEFT_4_MIN_SEQ_QUALITY</a> )

</pre>

<h3>Right Primers (identical to Left Primers):</h3>
<pre>
<a href="#PRIMER_RIGHT_4_PENALTY">PRIMER_RIGHT_4_PENALTY</a> =

   If <a href="#PRIMER_RIGHT_4_TM">PRIMER_RIGHT_4_TM</a> &gt; <a href="#PRIMER_OPT_TM">PRIMER_OPT_TM</a> then 
       this is added (+):

       + <a href="#PRIMER_WT_TM_GT">PRIMER_WT_TM_GT</a> * ( <a href="#PRIMER_RIGHT_4_TM">PRIMER_RIGHT_4_TM</a> - <a href="#PRIMER_OPT_TM">PRIMER_OPT_TM</a> )

   If <a href="#PRIMER_RIGHT_4_TM">PRIMER_RIGHT_4_TM</a> &lt; <a href="#PRIMER_OPT_TM">PRIMER_OPT_TM</a> then 
       this is added (+):

       + <a href="#PRIMER_WT_TM_LT">PRIMER_WT_TM_LT</a> * ( <a href="#PRIMER_OPT_TM">PRIMER_OPT_TM</a> - <a href="#PRIMER_RIGHT_4_TM">PRIMER_RIGHT_4_TM</a> )


   If <a href="#PRIMER_RIGHT_4_GC_PERCENT">PRIMER_RIGHT_4_GC_PERCENT</a> &gt; <a href="#PRIMER_OPT_GC_PERCENT">PRIMER_OPT_GC_PERCENT</a> then 
       this is added (+):

       + <a href="#PRIMER_WT_GC_PERCENT_GT">PRIMER_WT_GC_PERCENT_GT</a> *
            ( <a href="#PRIMER_RIGHT_4_GC_PERCENT">PRIMER_RIGHT_4_GC_PERCENT</a> - <a href="#PRIMER_OPT_GC_PERCENT">PRIMER_OPT_GC_PERCENT</a> )

   If <a href="#PRIMER_RIGHT_4_GC_PERCENT">PRIMER_RIGHT_4_GC_PERCENT</a> &lt; <a href="#PRIMER_OPT_GC_PERCENT">PRIMER_OPT_GC_PERCENT</a> then 
       this is added (+):

       + <a href="#PRIMER_WT_GC_PERCENT_LT">PRIMER_WT_GC_PERCENT_LT</a> *
            ( <a href="#PRIMER_OPT_GC_PERCENT">PRIMER_OPT_GC_PERCENT</a> - <a href="#PRIMER_RIGHT_4_GC_PERCENT">PRIMER_RIGHT_4_GC_PERCENT</a> )


   The following section uses &lt;primer length&gt; as part of 
   the term which is given as output in 
   <a href="#PRIMER_RIGHT_4">PRIMER_RIGHT_4</a>=position,&lt;primer length&gt; 

   If &lt;primer length&gt; &gt; <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> then 
       this is added (+):

       + <a href="#PRIMER_WT_SIZE_GT">PRIMER_WT_SIZE_GT</a> *
            ( &lt;primer length&gt; - <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> )

   If &lt;primer length&gt; &lt; <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> then 
       this is added (+):

       + <a href="#PRIMER_WT_SIZE_LT">PRIMER_WT_SIZE_LT</a> *
            ( <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> - &lt;primer length&gt; )


   If the primer does not overlap a target then 
       this is added (+):

       + <a href="#PRIMER_WT_POS_PENALTY">PRIMER_WT_POS_PENALTY</a> * <a href="#PRIMER_RIGHT_4_POSITION_PENALTY">PRIMER_RIGHT_4_POSITION_PENALTY</a>


   These are allways added (+) to the penalty:

       + <a href="#PRIMER_WT_SELF_ANY">PRIMER_WT_SELF_ANY</a> * <a href="#PRIMER_RIGHT_4_SELF_ANY">PRIMER_RIGHT_4_SELF_ANY</a>

       + <a href="#PRIMER_WT_SELF_END">PRIMER_WT_SELF_END</a> * <a href="#PRIMER_RIGHT_4_SELF_END">PRIMER_RIGHT_4_SELF_END</a>

       + <a href="#PRIMER_WT_TEMPLATE_MISPRIMING">PRIMER_WT_TEMPLATE_MISPRIMING</a> *
            <a href="#PRIMER_RIGHT_4_TEMPLATE_MISPRIMING">PRIMER_RIGHT_4_TEMPLATE_MISPRIMING</a>

       + <a href="#PRIMER_WT_END_STABILITY">PRIMER_WT_END_STABILITY</a> * <a href="#PRIMER_RIGHT_4_END_STABILITY">PRIMER_RIGHT_4_END_STABILITY</a>

       + <a href="#PRIMER_WT_NUM_NS">PRIMER_WT_NUM_NS</a> * &lt;numbers of N in the selected primer&gt;

       + <a href="#PRIMER_WT_LIBRARY_MISPRIMING">PRIMER_WT_LIBRARY_MISPRIMING</a> * <a href="#PRIMER_RIGHT_4_LIBRARY_MISPRIMING">PRIMER_RIGHT_4_LIBRARY_MISPRIMING</a>

       + <a href="#PRIMER_WT_SEQ_QUAL">PRIMER_WT_SEQ_QUAL</a> *
            ( <a href="#PRIMER_QUALITY_RANGE_MAX">PRIMER_QUALITY_RANGE_MAX</a> - 
              <a href="#PRIMER_RIGHT_4_MIN_SEQ_QUALITY">PRIMER_RIGHT_4_MIN_SEQ_QUALITY</a> )

</pre>

<h3>Internal Oligos:</h3>
<pre>
<a href="#PRIMER_INTERNAL_4_PENALTY">PRIMER_INTERNAL_4_PENALTY</a> =

   If <a href="#PRIMER_INTERNAL_4_TM">PRIMER_INTERNAL_4_TM</a> &gt; <a href="#PRIMER_INTERNAL_OPT_TM">PRIMER_INTERNAL_OPT_TM</a> then
       this is added (+):

       + <a href="#PRIMER_INTERNAL_WT_TM_GT">PRIMER_INTERNAL_WT_TM_GT</a> *
            ( <a href="#PRIMER_INTERNAL_4_TM">PRIMER_INTERNAL_4_TM</a> - <a href="#PRIMER_INTERNAL_OPT_TM">PRIMER_INTERNAL_OPT_TM</a> )

   If <a href="#PRIMER_INTERNAL_4_TM">PRIMER_INTERNAL_4_TM</a> &lt; <a href="#PRIMER_INTERNAL_OPT_TM">PRIMER_INTERNAL_OPT_TM</a> then
       this is added (+):

       + <a href="#PRIMER_INTERNAL_WT_TM_LT">PRIMER_INTERNAL_WT_TM_LT</a> *
            ( <a href="#PRIMER_INTERNAL_OPT_TM">PRIMER_INTERNAL_OPT_TM</a> - <a href="#PRIMER_INTERNAL_4_TM">PRIMER_INTERNAL_4_TM</a> )


   If <a href="#PRIMER_INTERNAL_4_GC_PERCENT">PRIMER_INTERNAL_4_GC_PERCENT</a> &gt; <a href="#PRIMER_INTERNAL_OPT_GC_PERCENT">PRIMER_INTERNAL_OPT_GC_PERCENT</a>
       then this is added (+):

       + <a href="#PRIMER_INTERNAL_WT_GC_PERCENT_GT">PRIMER_INTERNAL_WT_GC_PERCENT_GT</a> *
            ( <a href="#PRIMER_INTERNAL_4_GC_PERCENT">PRIMER_INTERNAL_4_GC_PERCENT</a> - 
              <a href="#PRIMER_INTERNAL_OPT_GC_PERCENT">PRIMER_INTERNAL_OPT_GC_PERCENT</a> )

   If <a href="#PRIMER_INTERNAL_4_GC_PERCENT">PRIMER_INTERNAL_4_GC_PERCENT</a> &lt; <a href="#PRIMER_INTERNAL_OPT_GC_PERCENT">PRIMER_INTERNAL_OPT_GC_PERCENT</a>
       then this is added (+):

       + <a href="#PRIMER_INTERNAL_WT_GC_PERCENT_LT">PRIMER_INTERNAL_WT_GC_PERCENT_LT</a> *
            ( <a href="#PRIMER_INTERNAL_OPT_GC_PERCENT">PRIMER_INTERNAL_OPT_GC_PERCENT</a> -
              <a href="#PRIMER_INTERNAL_4_GC_PERCENT">PRIMER_INTERNAL_4_GC_PERCENT</a> )


   The following section uses &lt;primer length&gt; as part of 
   the term which is given as output in 
   <a href="#PRIMER_INTERNAL_4">PRIMER_INTERNAL_4</a>=position,&lt;primer length&gt; 

   If &lt;primer length&gt; &gt; <a href="#PRIMER_INTERNAL_OPT_SIZE">PRIMER_INTERNAL_OPT_SIZE</a> then 
       this is added (+):

       + <a href="#PRIMER_INTERNAL_WT_SIZE_GT">PRIMER_INTERNAL_WT_SIZE_GT</a> *
            ( &lt;primer length&gt; - <a href="#PRIMER_INTERNAL_OPT_SIZE">PRIMER_INTERNAL_OPT_SIZE</a> )

   If &lt;primer length&gt; &lt; <a href="#PRIMER_INTERNAL_OPT_SIZE">PRIMER_INTERNAL_OPT_SIZE</a> then
       this is added (+):

       + <a href="#PRIMER_INTERNAL_WT_SIZE_LT">PRIMER_INTERNAL_WT_SIZE_LT</a> *
            ( <a href="#PRIMER_INTERNAL_OPT_SIZE">PRIMER_INTERNAL_OPT_SIZE</a> - &lt;primer length&gt; )


   These are allways added (+) to the penalty:

     + <a href="#PRIMER_INTERNAL_WT_SELF_ANY">PRIMER_INTERNAL_WT_SELF_ANY</a> * <a href="#PRIMER_INTERNAL_4_SELF_ANY">PRIMER_INTERNAL_4_SELF_ANY</a>

     + <a href="#PRIMER_INTERNAL_WT_SELF_END">PRIMER_INTERNAL_WT_SELF_END</a> * <a href="#PRIMER_INTERNAL_4_SELF_END">PRIMER_INTERNAL_4_SELF_END</a>

     + <a href="#PRIMER_INTERNAL_WT_NUM_NS">PRIMER_INTERNAL_WT_NUM_NS</a> *
          &lt;numbers of N in the selected primer&gt;

     + <a href="#PRIMER_INTERNAL_WT_LIBRARY_MISHYB">PRIMER_INTERNAL_WT_LIBRARY_MISHYB</a> *
          <a href="#PRIMER_INTERNAL_4_LIBRARY_MISHYB">PRIMER_INTERNAL_4_LIBRARY_MISHYB</a>

     + <a href="#PRIMER_INTERNAL_WT_SEQ_QUAL">PRIMER_INTERNAL_WT_SEQ_QUAL</a> * 
          ( <a href="#PRIMER_QUALITY_RANGE_MAX">PRIMER_QUALITY_RANGE_MAX</a> - 
            <a href="#PRIMER_INTERNAL_4_MIN_SEQ_QUALITY">PRIMER_INTERNAL_4_MIN_SEQ_QUALITY</a> )

</pre>
<p>	
The primers are then sorted by penalty and primer3 tries to pick 
the primers with the lowest penalty. For the <a href="#PRIMER_TASK">PRIMER_TASK</a>
<tt><i>pick_primer_list</i></tt> or <tt><i>pick_sequencing_primers</i></tt> the selection ends at 
this point. If primer pairs have to be selected, a 
<a href="#PRIMER_PAIR_4_PENALTY">PRIMER_PAIR_4_PENALTY</a> is calculated:
<pre>
<a href="#PRIMER_PAIR_4_PENALTY">PRIMER_PAIR_4_PENALTY</a> =

   To the pair penalty are at first the single primer penalties 
   added (+):

       + <a href="#PRIMER_PAIR_WT_PR_PENALTY">PRIMER_PAIR_WT_PR_PENALTY</a> *
            ( <a href="#PRIMER_LEFT_4_PENALTY">PRIMER_LEFT_4_PENALTY</a> + <a href="#PRIMER_RIGHT_4_PENALTY">PRIMER_RIGHT_4_PENALTY</a> )


   If internal oligo is picked then this is added (+):

       + <a href="#PRIMER_PAIR_WT_IO_PENALTY">PRIMER_PAIR_WT_IO_PENALTY</a> * <a href="#PRIMER_INTERNAL_4_PENALTY">PRIMER_INTERNAL_4_PENALTY</a>
	

   If <a href="#PRIMER_PAIR_4_PRODUCT_TM">PRIMER_PAIR_4_PRODUCT_TM</a> &gt; <a href="#PRIMER_PRODUCT_OPT_TM">PRIMER_PRODUCT_OPT_TM</a> then
       this is added (+):

       + <a href="#PRIMER_PAIR_WT_PRODUCT_TM_GT">PRIMER_PAIR_WT_PRODUCT_TM_GT</a> *
            ( <a href="#PRIMER_PAIR_4_PRODUCT_TM">PRIMER_PAIR_4_PRODUCT_TM</a> - <a href="#PRIMER_PRODUCT_OPT_TM">PRIMER_PRODUCT_OPT_TM</a> )

   If <a href="#PRIMER_PAIR_4_PRODUCT_TM">PRIMER_PAIR_4_PRODUCT_TM</a> &lt; <a href="#PRIMER_PRODUCT_OPT_TM">PRIMER_PRODUCT_OPT_TM</a> then
       this is added (+):

       + <a href="#PRIMER_PAIR_WT_PRODUCT_TM_LT">PRIMER_PAIR_WT_PRODUCT_TM_LT</a> *
            ( <a href="#PRIMER_PRODUCT_OPT_TM">PRIMER_PRODUCT_OPT_TM</a> - <a href="#PRIMER_PAIR_4_PRODUCT_TM">PRIMER_PAIR_4_PRODUCT_TM</a> )


   If <a href="#PRIMER_PAIR_4_PRODUCT_SIZE">PRIMER_PAIR_4_PRODUCT_SIZE</a> &gt; <a href="#PRIMER_PRODUCT_OPT_SIZE">PRIMER_PRODUCT_OPT_SIZE</a> then
       this is added (+):

       + <a href="#PRIMER_PAIR_WT_PRODUCT_SIZE_GT">PRIMER_PAIR_WT_PRODUCT_SIZE_GT</a> *
            ( <a href="#PRIMER_PAIR_4_PRODUCT_SIZE">PRIMER_PAIR_4_PRODUCT_SIZE</a> - <a href="#PRIMER_PRODUCT_OPT_SIZE">PRIMER_PRODUCT_OPT_SIZE</a> )

   If <a href="#PRIMER_PAIR_4_PRODUCT_SIZE">PRIMER_PAIR_4_PRODUCT_SIZE</a> &lt; <a href="#PRIMER_PRODUCT_OPT_SIZE">PRIMER_PRODUCT_OPT_SIZE</a> then
       this is added (+):

       + <a href="#PRIMER_PAIR_WT_PRODUCT_SIZE_LT">PRIMER_PAIR_WT_PRODUCT_SIZE_LT</a> *
            ( <a href="#PRIMER_PRODUCT_OPT_SIZE">PRIMER_PRODUCT_OPT_SIZE</a> - <a href="#PRIMER_PAIR_4_PRODUCT_SIZE">PRIMER_PAIR_4_PRODUCT_SIZE</a> )


   These are allways added (+) to the penalty:

     + <a href="#PRIMER_PAIR_WT_DIFF_TM">PRIMER_PAIR_WT_DIFF_TM</a> * 
          &lt;difference in Tm between the left and the right primer&gt;

     + <a href="#PRIMER_PAIR_WT_COMPL_ANY">PRIMER_PAIR_WT_COMPL_ANY</a> * <a href="#PRIMER_PAIR_4_COMPL_ANY">PRIMER_PAIR_4_COMPL_ANY</a>

     + <a href="#PRIMER_PAIR_WT_COMPL_END">PRIMER_PAIR_WT_COMPL_END</a> * <a href="#PRIMER_PAIR_4_COMPL_END">PRIMER_PAIR_4_COMPL_END</a>

     + <a href="#PRIMER_PAIR_WT_LIBRARY_MISPRIMING">PRIMER_PAIR_WT_LIBRARY_MISPRIMING</a> * <a href="#PRIMER_PAIR_4_LIBRARY_MISPRIMING">PRIMER_PAIR_4_LIBRARY_MISPRIMING</a>

     + <a href="#PRIMER_PAIR_WT_TEMPLATE_MISPRIMING">PRIMER_PAIR_WT_TEMPLATE_MISPRIMING</a> *
          <a href="#PRIMER_PAIR_4_TEMPLATE_MISPRIMING">PRIMER_PAIR_4_TEMPLATE_MISPRIMING</a>

</pre>
<p>Primer3 tries to select pairs with the lowest penalty which 
still fulfill all necessary requirements like non-redundancy or
product size limits.</p>

<h2><a name="fileFormat">19. PRIMER3 FILE FORMAT</a></h2>

<p>Primer3 allows to save settings in a text file and load it 
upon program start. This allows to save and exchange settings 
tailored to special applications.<br>
<br>
To create a primer3 file a editor able to save txt files is 
sufficient. The three lines of the file have to be:</p>
<pre>
Primer3 File - http://primer3.sourceforge.net
P3_FILE_TYPE=settings

P3_FILE_ID=Description of the settings
SEQUENCE_TEMPLATE=ATG...
...
...
...
=
</pre> 
<p>In the first line "Primer3 File - http://primer3.sourceforge.net" 
without tailing space. In the second line "P3_FILE_TYPE=settings".
Valid values for P3_FILE_TYPE are all_parameters, sequence and 
settings. Up to now, only settings is supported. The third line 
has to be empty. It is strongly adviced to describe the settings 
using the P3_FILE_ID tag. It will print the description of the 
settings on the output. From the fourth line on regular 
boulder-io can be used as it is used in regular input. It also 
has to be terminated with a single "=". There can be only one 
input per file.</p>

<h2><a name="example">20. AN EXAMPLE</a></h2>

<p>One might be interested in performing PCR on an STS with a CA
repeat in the middle of it. Primers need to be chosen based on
the criteria of the experiment.<br>
<br>
We need to come up with a boulder-io record to send to primer3 via
stdin. There are lots of ways to accomplish this. We could save
the record into a text file called 'input', and then type the
UNIX command 'primer3 &lt; input'.<br>
<br>
Let's look at the input record itself:
<br>
<a href="#SEQUENCE_ID">SEQUENCE_ID</a>=example<br>
<a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a>=GTAGTCAGTAGACNATGACNACTGACGATGCAGACNACACACACACACACAGCACACAGGTATTAGTGGGCCATTCGATCCCGACCCAAATCGATAGCTACGATGACG<br>
<a href="#SEQUENCE_TARGET">SEQUENCE_TARGET</a>=37,21<br>
<a href="#PRIMER_TASK">PRIMER_TASK</a>=pick_detection_primers<br>
<a href="#PRIMER_PICK_LEFT_PRIMER">PRIMER_PICK_LEFT_PRIMER</a>=1<br>
<a href="#PRIMER_PICK_INTERNAL_OLIGO">PRIMER_PICK_INTERNAL_OLIGO</a>=1<br>
<a href="#PRIMER_PICK_RIGHT_PRIMER">PRIMER_PICK_RIGHT_PRIMER</a>=1<br>
<a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a>=18<br>
<a href="#PRIMER_MIN_SIZE">PRIMER_MIN_SIZE</a>=15<br>
<a href="#PRIMER_MAX_SIZE">PRIMER_MAX_SIZE</a>=21<br>
<a href="#PRIMER_NUM_NS_ACCEPTED">PRIMER_NUM_NS_ACCEPTED</a>=1<br>
<a href="#PRIMER_PRODUCT_SIZE_RANGE">PRIMER_PRODUCT_SIZE_RANGE</a>=75-100<br>
<a href="#P3_FILE_FLAG">P3_FILE_FLAG</a>=1<br>
<a href="#SEQUENCE_INTERNAL_EXCLUDED_REGION">SEQUENCE_INTERNAL_EXCLUDED_REGION</a>=37,21<br>
<a href="#PRIMER_EXPLAIN_FLAG">PRIMER_EXPLAIN_FLAG</a>=1<br>
=<br>
<br>
A breakdown of the reasoning behind each of the TAG=VALUE pairs
is below:<br>
<br>
<a href="#SEQUENCE_ID">SEQUENCE_ID</a>=example<br>
<br>
The main intent of this tag is to provide an identifier for the
sequence that is meaningful to the user, for example when primer3
processes multiple records, and by default this tag is optional.
However, this tag is _required_ when <a href="#P3_FILE_FLAG">P3_FILE_FLAG</a> is non-0
Because it provides the names of the files that contain lists
of oligos that primer3 considered.<br>
<br>
<a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a>=GTAGTCAGTAGACNATGACNACTGACGATGCAGACNACACACACACACACAGCACACAGGTATTAGTGGGCCATTCGATCCCGACCCAAATCGATAGCTACGATGACG<br>
<br>
The <a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a> tag is of ultimate importance. Without it, primer3
has no idea what to do. This sequence is 92 bases long. Note that
there is no newline until the sequence terminates completely.<br>
<br>
<a href="#SEQUENCE_TARGET">SEQUENCE_TARGET</a>=37,21<br>
<br>
There is a simple sequence repeat in our sequence, which starts
at base 37, and has a length of 21 bases. We want primer3 to
choose primers which flank the repeat site, so we let primer3 know
that we consider this site to be important.<br>
<br>
<a href="#PRIMER_TASK">PRIMER_TASK</a>=pick_detection_primers<br>
<br>
The <a href="#PRIMER_TASK">PRIMER_TASK</a> is of ultimate importance it tells primer3 which 
type of primers to pick. You can select typical primers for PCR 
detection, primers for cloning or for sequencing.<br>
<br>
<a href="#PRIMER_PICK_LEFT_PRIMER">PRIMER_PICK_LEFT_PRIMER</a>=1<br>
<a href="#PRIMER_PICK_INTERNAL_OLIGO">PRIMER_PICK_INTERNAL_OLIGO</a>=1<br>
<a href="#PRIMER_PICK_RIGHT_PRIMER">PRIMER_PICK_RIGHT_PRIMER</a>=1<br>
<br>
We would like to pick a left primer, a internal oligo and a 
right primer, so we set this flags to 1 (true). In combination 
with the <a href="#PRIMER_TASK">PRIMER_TASK</a> this tags control which primers are 
picked.<br>
<br>
<a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a>=18<br>
<br>
Since our sequence length is rather small (only 92 bases
long), we lower the <a href="#PRIMER_OPT_SIZE">PRIMER_OPT_SIZE</a> from 20 to 18. It's
more likely that primer3 will succeed if it shoots for smaller
primers with such a small sequence.<br>
<br>
<a href="#PRIMER_MIN_SIZE">PRIMER_MIN_SIZE</a>=15<br>
<a href="#PRIMER_MAX_SIZE">PRIMER_MAX_SIZE</a>=21<br>
<br>
With the lowering of optimal primer size, it's good to lower
the minimum and maximum sizes as well.<br>
<br>
<a href="#PRIMER_NUM_NS_ACCEPTED">PRIMER_NUM_NS_ACCEPTED</a>=1<br>
<br>
Again, since we've got such a small sequence with a
non-negligible amount of unknown bases (N's) in it, let's make
primer3's job easier by allowing it to pick primers that have
at most 1 unknown base.<br>
<br>
<a href="#PRIMER_PRODUCT_SIZE_RANGE">PRIMER_PRODUCT_SIZE_RANGE</a>=75-100<br>
<br>
We reduce the product size range from the default of 100-300
because our source sequence is only 108 base pairs long.  If we
insisted on a product size of 100 base pairs primer3 would have
few possibilities to choose from.<br>
<br>
<a href="#P3_FILE_FLAG">P3_FILE_FLAG</a>=1<br>
<br>
Since we've got such a small sequence, Primer might fail to
pick primers. We want to get the list of primers it
considered, then, so that we might manually pick primers
ourselves if Primer fails to do so. Setting this flag to 1
will force Primer to output the primers it considered to a
forward_primer and a reverse_primer output file.<br>
<br>
<a href="#SEQUENCE_INTERNAL_EXCLUDED_REGION">SEQUENCE_INTERNAL_EXCLUDED_REGION</a>=37,21<br>
<br>
Normally CA-repeats make poor hybridization probes (because they
not specific enough).  Therefor we exclude the CA repeat (which
is the TARGET) from consideration for the middle oligo.<br>
<br>
<a href="#PRIMER_EXPLAIN_FLAG">PRIMER_EXPLAIN_FLAG</a>=1<br>
<br>
We want to see statistics about the oligos and oligo triples
(left primer, internal oligo, right primer) that primer3
examined.<br>
<br>
=<br>
<br>
The '=' character terminates the record.<br>
<br>
There are some boulderio tags that we never even
specified. (<a href="#SEQUENCE_INCLUDED_REGION">SEQUENCE_INCLUDED_REGION</a>, <a href="#SEQUENCE_EXCLUDED_REGION">SEQUENCE_EXCLUDED_REGION</a>, 
et al.), which is perfectly legal.  For the tags with default 
values, those defaults will be used in the analysis. For the 
tags with NO default values (like <a href="#SEQUENCE_TARGET">SEQUENCE_TARGET</a>, for instance), the 
functionality requested by the those tags will simply be absent. 
It's not the case that we need to surround a simple sequence 
repeat every time we want to pick primers!</p>

<h2><a name="outputTags">21. OUTPUT TAGS</a></h2>

<p>For each boulderio record passed into primer3 via stdin, exactly
one boulderio record comes out of primer3 on stdout. These output
records contain everything that the input record contains, plus a
subset of the following tag/value pairs.  Unless noted by (*),
each tag appears for each primer pair returned.<br>
Tags are of the form PRIMER_{LEFT,RIGHT,INTERNAL,PAIR}_&lt;j&gt;_&lt;tag_name&gt;
where &lt;j&gt; is an integer from 0 to n, where n is at most the 
value of <a href="#PRIMER_NUM_RETURN">PRIMER_NUM_RETURN</a>. In the documentation the output 
nr. 5 is shown as for example: <a href="#PRIMER_LEFT_4_TM">PRIMER_LEFT_4_TM</a>.<br>
<br>
In the descriptions below, 'i,n' represents a start/length pair,
's' represents a string, x represents an arbitrary integer, and f
represents a float.</p>
<h3><a name="PRIMER_ERROR">PRIMER_ERROR=s (*)</a></h3>

<p>s describes user-correctible errors detected in the input
(separated by semicolons).  This tag is absent if there are no
errors.</p>


<h3><a name="PRIMER_WARNING">PRIMER_WARNING=s (*)</a></h3>

<p>s lists warnings generated by primer (separated by semicolons);
this tag is absent if there are no warnings.</p>


<h3><a name="PRIMER_LEFT_4_PROBLEMS">PRIMER_LEFT_4_PROBLEMS=s (*)</a></h3>
<h3><a name="PRIMER_INTERNAL_4_PROBLEMS">PRIMER_INTERNAL_4_PROBLEMS=s (*)</a></h3>
<h3><a name="PRIMER_RIGHT_4_PROBLEMS">PRIMER_RIGHT_4_PROBLEMS=s (*)</a></h3>

<p>s lists the problems (constraint violations) associated
with the corresponding primer oligo.  Generated when
<a href="#P3_SHOW_OLIGO_PROBLEMS">P3_SHOW_OLIGO_PROBLEMS</a> is true (non zero), and
primer3 was forced to choose a primer or oligo
that did not satisfy specified design constraints
(as when <a href="#PRIMER_PICK_ANYWAY">PRIMER_PICK_ANYWAY</a>=1 and a primer sequence
is provided).</p>


<h3><a name="PRIMER_LEFT_EXPLAIN">PRIMER_LEFT_EXPLAIN=s (*)</a></h3>
<h3><a name="PRIMER_INTERNAL_EXPLAIN">PRIMER_INTERNAL_EXPLAIN=s (*)</a></h3>
<h3><a name="PRIMER_RIGHT_EXPLAIN">PRIMER_RIGHT_EXPLAIN=s (*)</a></h3>

<p>s is a (more or less) self-documenting string containing
statistics on the possiblities that primer3 considered in
selecting a single oligo.  For example</p>
<pre>
PRIMER_LEFT_EXPLAIN=considered 62, too many Ns 53, ok 9
PRIMER_RIGHT_EXPLAIN=considered 62, too many Ns 53, ok 9
PRIMER_INTERNAL_OLIGO_EXPLAIN=considered 87, too many Ns 39, overlap excluded region 40, ok 8

All the categories are exclusive, except the 'considered' category.</pre>


<h3><a name="PRIMER_PAIR_EXPLAIN">PRIMER_PAIR_EXPLAIN=s (*)</a></h3>

<p>s is a self-documenting string containing statistics on picking a
primer pair (plus internal oligo if requested).  For exaple</p>
<pre>
PRIMER_PAIR_EXPLAIN=considered 81, unacceptable product size 49, no internal oligo 32, ok 0

All the categories are exclusive, except the 'considered' category.
</pre>
<p>In some cases primer3 will examine a primer pair before it
discovers that one of the primers in the pair violates specified
constraints.  In this case PRIMER_PAIR_EXPLAIN might have a non-0
number 'considered', even though one or more of
PRIMER_LEFT_EXPLAIN, PRIMER_RIGHT_EXPLAIN, or
PRIMER_INTERNAL_OLIGO_EXPLAIN has 'ok 0'.</p>


<h3><a name="P3_FILE_ID">P3_FILE_ID=s (*)</a></h3>

<p>s prints out the description tag of the settings file loaded 
at program start. It will be produced at each output. If no 
settings file was specified this tag is not present and default 
parameters are used.</p>


<h3><a name="PRIMER_LEFT_4">PRIMER_LEFT_4=i,n</a></h3>

<p>The selected left primer (the primer to the left in the input
sequence).  i is the 0-based index of the start base of the
primer, and n is t its length.</p>


<h3><a name="PRIMER_INTERNAL_4">PRIMER_INTERNAL_4=i,n</a></h3>

<p>The selected internal oligo. Primer3 outputs this tag if
<a href="#PRIMER_PICK_INTERNAL_OLIGO">PRIMER_PICK_INTERNAL_OLIGO</a> was non-0.  If primer3 fails to pick a
middle oligo upon request, this tag will not be output.  i is the
0-based index of start base of the internal oligo, and n is its
length.</p>


<h3><a name="PRIMER_RIGHT_4">PRIMER_RIGHT_4=i,n</a></h3>

<p>The selected right primer (the primer to the right in the input
sequence).  i is the 0-based index of the last base of the
primer, and n is its length.</p>


<h3><a name="PRIMER_LEFT_4_SEQUENCE">PRIMER_LEFT_4_SEQUENCE=s</a></h3>
<h3><a name="PRIMER_INTERNAL_4_SEQUENCE">PRIMER_INTERNAL_4_SEQUENCE=s</a></h3>
<h3><a name="PRIMER_RIGHT_4_SEQUENCE">PRIMER_RIGHT_4_SEQUENCE=s</a></h3>

<p>The actual sequence of the oligo. The sequence of left primer and
internal oligo is presented 5' -> 3' on the same strand as the
input <a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a> (which must be presented 5' -> 3').  The 
sequence of the right primer is presented 5' -> 3' on the 
opposite strand from the input <a href="#SEQUENCE_TEMPLATE">SEQUENCE_TEMPLATE</a>.</p>


<h3><a name="PRIMER_PAIR_4_PRODUCT_SIZE">PRIMER_PAIR_4_PRODUCT_SIZE=x</a></h3>

<p>x is the product size of the PCR product.</p>


<h3><a name="PRIMER_LEFT_4_PENALTY">PRIMER_LEFT_4_PENALTY=f</a></h3>
<h3><a name="PRIMER_INTERNAL_4_PENALTY">PRIMER_INTERNAL_4_PENALTY=f</a></h3>
<h3><a name="PRIMER_RIGHT_4_PENALTY">PRIMER_RIGHT_4_PENALTY=f</a></h3>

<p>The contribution of this individual primer or oligo to the
objective function.</p>


<h3><a name="PRIMER_PAIR_4_PENALTY">PRIMER_PAIR_4_PENALTY=f</a></h3>

<p>The value of the objective function for this pair (lower is better).</p>


<h3><a name="PRIMER_LEFT_4_TM">PRIMER_LEFT_4_TM=f</a></h3>
<h3><a name="PRIMER_INTERNAL_4_TM">PRIMER_INTERNAL_4_TM=f</a></h3>
<h3><a name="PRIMER_RIGHT_4_TM">PRIMER_RIGHT_4_TM=f</a></h3>

<p>The melting TM for the selected oligo.</p>


<h3><a name="PRIMER_PAIR_4_PRODUCT_TM">PRIMER_PAIR_4_PRODUCT_TM=f</a></h3>

<p>f is the melting temperature of the product. Calculated using
equation (iii) from the paper [Rychlik W, Spencer WJ and Rhoads
RE (1990) "Optimization of the annealing temperature for DNA
amplification in vitro", Nucleic Acids Res 18:6409-12
<a href="http://dx.doi.org/10.1093/nar/18.21.6409">http://dx.doi.org/10.1093/nar/18.21.6409</a>].
Printed only if a non-default value of <a href="#PRIMER_MAX_PRODUCT_TM">PRIMER_MAX_PRODUCT_TM</a> or
<a href="#PRIMER_MIN_PRODUCT_TM">PRIMER_MIN_PRODUCT_TM</a> is specified.</p>


<h3><a name="PRIMER_PAIR_4_PRODUCT_TM_OLIGO_TM_DIFF">PRIMER_PAIR_4_PRODUCT_TM_OLIGO_TM_DIFF=f</a></h3>

<p>f is the difference between the melting temperature of the
product and the melting temperature of the less stable primer.
Printed only if <a href="#PRIMER_MAX_PRODUCT_TM">PRIMER_MAX_PRODUCT_TM</a> or <a href="#PRIMER_MIN_PRODUCT_TM">PRIMER_MIN_PRODUCT_TM</a> is
specified.</p>


<h3><a name="PRIMER_PAIR_4_T_OPT_A">PRIMER_PAIR_4_T_OPT_A=f</a></h3>

<p>f is T sub a super OPT from equation (i) in [Rychlik W, Spencer
WJ and Rhoads RE (1990) "Optimization of the annealing
temperature for DNA amplification in vitro", Nucleic Acids Res
18:6409-12. <a href="http://dx.doi.org/10.1093/nar/18.21.6409">http://dx.doi.org/10.1093/nar/18.21.6409</a>].
Printed only if <a href="#PRIMER_MAX_PRODUCT_TM">PRIMER_MAX_PRODUCT_TM</a> or <a href="#PRIMER_MIN_PRODUCT_TM">PRIMER_MIN_PRODUCT_TM</a> is
specified.</p>


<h3><a name="PRIMER_LEFT_4_GC_PERCENT">PRIMER_LEFT_4_GC_PERCENT=f</a></h3>
<h3><a name="PRIMER_INTERNAL_4_GC_PERCENT">PRIMER_INTERNAL_4_GC_PERCENT=f</a></h3>
<h3><a name="PRIMER_RIGHT_4_GC_PERCENT">PRIMER_RIGHT_4_GC_PERCENT=f</a></h3>

<p>The percent GC for the selected oligo (denominator is the number
of non-ambiguous bases).</p>


<h3><a name="PRIMER_LEFT_4_SELF_ANY">PRIMER_LEFT_4_SELF_ANY=f</a></h3>
<h3><a name="PRIMER_INTERNAL_4_SELF_ANY">PRIMER_INTERNAL_4_SELF_ANY=f</a></h3>
<h3><a name="PRIMER_RIGHT_4_SELF_ANY">PRIMER_RIGHT_4_SELF_ANY=f</a></h3>

<p>The calculated value for the tendency of a primer to bind to 
itself (interfering with target sequence binding). It will score 
ANY binding occuring within the entire primer sequence. For 
details see <a href="#PRIMER_SELF_ANY">PRIMER_SELF_ANY</a>.<br> 
The self-complementarity measures for the selected oligo.</p>


<h3><a name="PRIMER_PAIR_4_COMPL_ANY">PRIMER_PAIR_4_COMPL_ANY=f</a></h3>

<p>The calculated value for the tendency of a primer pair to bind to 
each other (interfering with target sequence binding). It will 
score ANY binding occuring within the entire primer sequence. 
For details see <a href="#PRIMER_SELF_ANY">PRIMER_SELF_ANY</a>.<br> 
The inter-pair complementarity measures over the complete primer 
for selected left and right primer.</p>


<h3><a name="PRIMER_LEFT_4_SELF_END">PRIMER_LEFT_4_SELF_END=f</a></h3>
<h3><a name="PRIMER_INTERNAL_4_SELF_END">PRIMER_INTERNAL_4_SELF_END=f</a></h3>
<h3><a name="PRIMER_RIGHT_4_SELF_END">PRIMER_RIGHT_4_SELF_END=f</a></h3>

<p>The calculated value for the tendency of the 3'-END to bind to a 
identical primer. This is critical for primer quality because it 
allows primers use itself as a target and amplify a short piece 
(forming a primer-dimer). These primer are then unable to bind 
and amplify the target sequence. For details see <a href="#PRIMER_SELF_END">PRIMER_SELF_END</a>.<br>
The self-complementarity measures for the ends of selected oligo.</p>


<h3><a name="PRIMER_PAIR_4_COMPL_END">PRIMER_PAIR_4_COMPL_END=f</a></h3>

<p>The calculated value for the tendency of the 3'-ENDs of a primer pair to bind to 
each other. This is critical for primer quality because it 
allows primers use itself as a target and amplify a short piece 
(forming a primer-dimer). These primer are then unable to bind 
and amplify the target sequence. For details see 
<a href="#PRIMER_SELF_END">PRIMER_SELF_END</a>.<br>
The inter-pair complementarity measures for the ends of selected
left and right primer.</p>


<h3><a name="PRIMER_LEFT_4_END_STABILITY">PRIMER_LEFT_4_END_STABILITY=f</a></h3>
<h3><a name="PRIMER_RIGHT_4_END_STABILITY">PRIMER_RIGHT_4_END_STABILITY=f</a></h3>

<p>f is the delta G of disruption of the five 3' bases of the
primer.</p>


<h3><a name="PRIMER_LEFT_4_TEMPLATE_MISPRIMING">PRIMER_LEFT_4_TEMPLATE_MISPRIMING=f</a></h3>
<h3><a name="PRIMER_RIGHT_4_TEMPLATE_MISPRIMING">PRIMER_RIGHT_4_TEMPLATE_MISPRIMING=f</a></h3>
<h3><a name="PRIMER_PAIR_4_TEMPLATE_MISPRIMING">PRIMER_PAIR_4_TEMPLATE_MISPRIMING=f</a></h3>

<p>Analogous to PRIMER_{LEFT,RIGHT,PAIR}_LIBRARY_MISPRIMING, except that
these output tags apply to mispriming within the template sequence.
This often arises, for example, in genes with repeated exons. For
backward compatibility, these tags only appear if the corresponding
input tags have defined values.</p>


<h3><a name="PRIMER_LEFT_4_LIBRARY_MISPRIMING">PRIMER_LEFT_4_LIBRARY_MISPRIMING=f, s</a></h3>
<h3><a name="PRIMER_RIGHT_4_LIBRARY_MISPRIMING">PRIMER_RIGHT_4_LIBRARY_MISPRIMING=f, s</a></h3>
<h3><a name="PRIMER_PAIR_4_LIBRARY_MISPRIMING">PRIMER_PAIR_4_LIBRARY_MISPRIMING=f, s</a></h3>

<p>f is the maximum mispriming score for the right primer
against any sequence in the given <a href="#PRIMER_MISPRIMING_LIBRARY">PRIMER_MISPRIMING_LIBRARY</a>;
s is the id of corresponding library sequence.
<a href="#PRIMER_PAIR_LIBRARY_MISPRIMING">PRIMER_PAIR_LIBRARY_MISPRIMING</a> is the maximum sum of
mispriming scores in any single library sequence (perhaps a
more reasonable estimator of the likelihood of mispriming).</p>


<h3><a name="PRIMER_INTERNAL_4_LIBRARY_MISHYB">PRIMER_INTERNAL_4_LIBRARY_MISHYB=f, s</a></h3>

<p>f is the maximum mishybridization score for the right primer
against any sequence in the given
<a href="#PRIMER_INTERNAL_MISHYB_LIBRARY">PRIMER_INTERNAL_MISHYB_LIBRARY</a>; s is the id of
corresponding library sequence.</p>


<h3><a name="PRIMER_LEFT_4_MIN_SEQ_QUALITY">PRIMER_LEFT_4_MIN_SEQ_QUALITY=i</a></h3>
<h3><a name="PRIMER_INTERNAL_4_MIN_SEQ_QUALITY">PRIMER_INTERNAL_4_MIN_SEQ_QUALITY=i</a></h3>
<h3><a name="PRIMER_RIGHT_4_MIN_SEQ_QUALITY">PRIMER_RIGHT_4_MIN_SEQ_QUALITY=i</a></h3>

<p>i is the minimum _sequence_ quality within the primer
or oligo (not to be confused with the <a href="#PRIMER_PAIR_4_PENALTY">PRIMER_PAIR_4_PENALTY</a>
output tag, which is really the value of the objective
function.)</p>


<h3><a name="PRIMER_STOP_CODON_POSITION">PRIMER_STOP_CODON_POSITION=i</a></h3>

<p>i is the position of the first base of the stop codon,
if primer3 found one, or -1 if primer3 did not.  Printed
only if the input tag <a href="#PRIMER_START_CODON_POSITION">PRIMER_START_CODON_POSITION</a> with a
non-default value is supplied.</p>


<h3><a name="PRIMER_LEFT_4_POSITION_PENALTY">PRIMER_LEFT_4_POSITION_PENALTY=i</a></h3>
<h3><a name="PRIMER_RIGHT_4_POSITION_PENALTY">PRIMER_RIGHT_4_POSITION_PENALTY=i</a></h3>

<p>i is the penalty of the primer by its 
position.</p>


<h2><a name="exampleOutput">22. EXAMPLE OUTPUT</a></h2>

<p>You should run it yourself.  Use the file 'example' in this
directory as input.</p>

<h2><a name="pickAdvice">23. ADVICE FOR PICKING PRIMERS</a></h2>

<p>We suggest consulting: Wojciech Rychlik (1993) "Selection of
Primers for Polymerase Chain Reaction" in BA White, Ed., "Methods
in Molecular Biology, Vol. 15: PCR Protocols: Current Methods and
Applications", pp 31-40, Humana Press, Totowa NJ.</p>

<h2><a name="cautions">24. CAUTIONS</a></h2>

<p>Some of the most important issues in primer picking can be
addressed only before using primer3. These are sequence quality 
(including making sure the sequence is not vector and not chimeric) 
and avoiding repetitive elements.<br>
<br>
Techniques for avoiding problems include a thorough understanding
of possible vector contaminants and cloning artifacts coupled
with database searches using blast, fasta, or other similarity
searching program to screen for vector contaminants and possible
repeats.  Repbase (J. Jurka, A.F.A. Smit, C. Pethiyagoda, and
others, 1995-1996, <a href="ftp://ncbi.nlm.nih.gov/repository/repbase">ftp://ncbi.nlm.nih.gov/repository/repbase</a>)
is an excellent source of repeat sequences and pointers to the
literature.  (The Repbase files need to be converted to Fasta format
before they can be used by primer3.) Primer3 now allows you to screen
candidate oligos against a Mispriming Library (or a Mishyb Library in
the case of internal oligos).<br>
<br>
Sequence quality can be controlled by manual trace viewing and
quality clipping or automatic quality clipping programs.  Low-
quality bases should be changed to N's or can be made part of
Excluded Regions. The beginning of a sequencing read is often
problematic because of primer peaks, and the end of the read
often contains many low-quality or even meaningless called bases.
Therefore when picking primers from single-pass sequence it is
often best to use the <a href="#SEQUENCE_INCLUDED_REGION">SEQUENCE_INCLUDED_REGION</a> parameter to 
ensure that primer3 chooses primers in the high quality region 
of the read.<br>
<br>
In addition, primer3 takes as input a <a href="#SEQUENCE_QUALITY">SEQUENCE_QUALITY</a> list for
use with those base calling programs (e.g. Phred, Bass/Grace, 
Trout) that output this information.</p>

<h2><a name="findNoPrimers">25. WHAT TO DO IF PRIMER3 CANNOT FIND ANY PRIMERS?</a></h2>

<p>Try relaxing various parameters, including the
self-complementarity parameters and max and min oligo melting
temperatures.  For example, for very A-T-rich regions you might
have to increase maximum primer size or decrease minimum melting
temperature.  It is usually unwise to reduce the minimum primer
size if your template is complex (e.g. a mammalian genome), since
small primers are more likely to be non-specific.  Make sure that
there are adequate stretches of non-Ns in the regions in which
you wish to pick primers.  If necessary you can also allow an N
in your primer and use an oligo mixture containing all four bases
at that position.<br>
<br>
Try setting the <a href="#PRIMER_EXPLAIN_FLAG">PRIMER_EXPLAIN_FLAG</a> input tag.</p>

<h2><a name="earlierVersions">26. DIFFERENCES FROM EARLIER VERSIONS</a></h2>

<p>See the file release_notes.txt in this directory. The 
modified tags ae described in detail in HOW TO MIGRATE TAGS TO 
VERSION 4.</p>

<h2><a name="exitStatusCodes">27. EXIT STATUS CODES</a></h2>

<pre> 0 on normal operation
-1 under the following conditions:
   illegal command-line arguments.
   unable to fflush stdout.
   unable to open (for writing and creating) a .for, .rev
     or .int file (probably due to a protection problem).
-2 on out-of-memory
-3 empty input
-4 error in a "Global" input tag (message in PRIMER_ERROR).
</pre>
<p>Primer3 calls abort() and dumps core (if possible) if a
programming error is detected by an assertion violation.<br>
<br>
SIGINT and SIGTERM are handled essentially as empty input, except
the signal received is returned as the exit status and printed to
stderr.<br>
<br>
In all of the error cases above Primer3 prints a message to stderr.</p>

<h2><a name="webInterface">28. THE PRIMER3 WWW INTERFACE</a></h2>

<p>There are two web interfaces available :<br>
The Whitehead Institute for Biomedical Research provides a basic
web-based front end to primer3 named primer3web at
<a href="http://fokker.wi.mit.edu/cgi-bin/primer3/primer3_www.cgi">http://fokker.wi.mit.edu/cgi-bin/primer3/primer3_www.cgi</a><br>
<br>
The Wageningen University Laboratory of Bioinformatics provides a enhanced 
web-based front end to primer3 named primer3plus at
<a href="http://www.bioinformatics.nl/cgi-bin/primer3plus/primer3plus.cgi">http://www.bioinformatics.nl/cgi-bin/primer3plus/primer3plus.cgi</a><br>
<br>
This distribution does not contain the Primer3 WWW interface.<br>
<br>
Web interface code is available at
<a href="http://sourceforge.net/projects/primer3/">http://sourceforge.net/projects/primer3/</a>.</p>

<h2><a name="acknowledgments">29. ACKNOWLEDGMENTS</a></h2>

<p>Initial development of Primer3 was funded by Howard Hughes Medical
Institute and by the National Institutes of Health, National Human
Genome Research Institute under grants R01-HG00257 (to David C. Page)
and P50-HG00098 (to Eric S. Lander).<br>
<br>
Primer3 was originally written by Helen J. Skaletsky (Howard Hughes
Medical Institute, Whitehead Institute) and Steve Rozen (Whitehead
Institute/MIT Center for Genome Research), based on the design of
earlier versions: Primer 0.5 (Steve Lincoln, Mark Daly, and Eric
S. Lander) and Primer v2 (Richard Resnick).  This initial version of
this documentation was written by Richard Resnick and Steve Rozen, and
the original web interface was designed by Richard Resnick.  Lincoln
Stein championed the use of the Boulder-IO format and the idea of
making primer3 a software component.  In addition, among others, Ernst
Molitor, Carl Foeller, and James Bonfield contributed to the early
design of primer3. We also thank Centerline Software, Inc., for uses
of its TestCenter memory-error, -leak, and test-coverage checker,
which helped us discover and correct a number of otherwise latent
errors in Primer3.<br>
<br>
Primer3 is now operating as open software development project hosted
on SourceForge, and we are working out how to acknowledge all who have
contributed to its enahancement.  Current active developers can be
found at http://sourceforge.net/projects/primer3/.</p>

</div>
</body>
</html>
